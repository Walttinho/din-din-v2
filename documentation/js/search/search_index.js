var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.164,1,1.36]],["body/classes/Account.html",[0,0.124,1,1.523,2,0.708,3,0.12,4,0.12,5,0.105,6,2.43,7,0.167,8,1.385,9,2.898,10,3.835,11,2.742,12,4.743,13,3.219,14,1.036,15,0.731,16,0.453,17,2.767,18,1.202,19,1.385,20,2.172,21,3.864,22,1.362,23,0.67,24,4.184,25,0.806,26,0.018,27,0.641,28,1.979,29,2.823,30,2.107,31,3.494,32,2.823,33,2.172,34,2.823,35,2.43,36,2.823,37,2.43,38,2.823,39,0.81,40,3.494,41,2.823,42,2.823,43,2.823,44,4.241,45,2.823,46,2.823,47,2.823,48,2.823,49,2.63,50,2.823,51,2.172,52,2.823,53,0.382,54,2.43,55,2.823,56,3.219,57,2.172,58,1.49,59,0.12,60,2.172,61,2.172,62,0.851,63,0.851,64,2.823,65,3.219,66,1.283,67,3.602,68,4.184,69,4.184,70,2.172,71,3.494,72,2.43,73,2.823,74,2.823,75,0.01,76,0.01]],["title/modules/AccountModule.html",[77,1.5,78,2.244]],["body/modules/AccountModule.html",[0,0.165,3,0.159,4,0.159,5,0.139,26,0.018,53,0.45,59,0.159,75,0.012,76,0.012,77,2.344,78,4.484,79,1.867,80,1.764,81,2.108,82,2.108,83,1.867,84,3.278,85,3.278,86,3.231,87,3.231,88,3.231,89,4.427,90,4.427,91,3.37,92,2.864,93,2.879,94,2.108,95,2.108,96,3.753,97,2.166,98,4.09,99,4.09,100,0.78,101,3.753,102,3.753,103,3.753,104,3.753,105,2.425,106,2.63,107,2.255]],["title/classes/AccountRepository.html",[0,0.164,108,2.098]],["body/classes/AccountRepository.html",[0,0.177,1,2.646,2,1.011,3,0.171,4,0.171,5,0.149,7,0.238,14,0.874,15,0.662,16,0.393,22,1.259,23,0.58,25,0.885,26,0.017,27,0.704,28,3.771,39,0.983,53,0.262,59,0.171,63,2.087,75,0.012,76,0.012,108,3.022,109,3.473,110,1.016,111,5.146,112,2.529,113,4.243,114,4.632,115,4.139,116,4.034,117,2.645,118,2.827,119,3.912,120,3.912,121,4.034,122,4.632,123,4.034,124,4.034]],["title/modules/AppModule.html",[77,1.5,125,2.618]],["body/modules/AppModule.html",[0,0.175,3,0.169,4,0.169,5,0.148,26,0.018,53,0.448,59,0.169,75,0.012,76,0.012,77,2.42,78,4.146,79,1.987,80,1.878,81,2.244,82,2.244,83,1.987,84,3.003,85,2.244,93,3.003,94,2.244,95,2.244,97,1.688,100,0.83,107,3.211,125,5.276,126,3.439,127,3.439,128,4.46,129,3.877,130,4.46,131,4.46,132,3.995,133,3.995,134,3.995,135,3.995,136,3.995,137,3.995]],["title/controllers/AuthController.html",[138,1.5,139,2.618]],["body/controllers/AuthController.html",[0,0.124,3,0.12,4,0.12,5,0.105,7,0.167,14,0.461,15,0.459,16,0.272,18,0.618,23,0.272,25,0.414,26,0.018,27,0.33,39,0.461,53,0.358,59,0.12,66,0.618,75,0.01,76,0.01,97,1.199,100,0.59,110,0.792,138,1.139,139,2.942,140,2.442,141,1.704,142,4.757,143,1.579,144,2.713,145,2.442,146,4.24,147,1.263,148,2.442,149,3.614,150,2.442,151,3.23,152,2.073,153,1.829,154,4.198,155,3.942,156,3.003,157,3.23,158,3.23,159,2.808,160,3.23,161,3.23,162,2.808,163,2.808,164,2.637,165,3.259,166,1.988,167,2.836,168,1.593,169,3.811,170,1.833,171,3.003,172,2.836,173,2.442,174,1.704,175,2.522,176,3.543,177,2.942,178,1.263,179,2.836,180,2.836,181,1.41,182,1.496,183,1.704,184,3.104,185,2.46,186,1.988,187,1.988,188,1.988,189,1.988,190,1.988,191,1.833,192,1.833,193,0.939,194,1.704,195,3.313,196,2.358,197,1.988,198,1.333,199,2.182,200,1.988,201,2.442,202,2.637,203,1.704,204,2.808,205,2.808,206,3.003,207,3.003,208,2.808,209,1.593,210,1.704,211,2.836,212,2.836]],["title/injectables/AuthGuard.html",[213,0.776,214,1.858]],["body/injectables/AuthGuard.html",[0,0.184,3,0.289,4,0.177,5,0.155,7,0.247,15,0.602,16,0.357,23,0.528,25,0.805,26,0.018,27,0.641,39,0.895,53,0.357,59,0.177,62,1.261,66,1.201,75,0.013,76,0.013,100,0.87,110,1.041,153,2.254,165,3.253,209,3.096,213,1.146,214,3.066,215,1.599,216,3.601,217,3.311,218,5.512,219,5.512,220,5.512,221,5.512,222,6.553,223,4.183,224,4.183,225,5.512,226,4.183,227,6.165,228,4.183,229,2.932,230,4.183,231,2.513]],["title/modules/AuthModule.html",[77,1.5,128,2.414]],["body/modules/AuthModule.html",[0,0.161,3,0.155,4,0.155,5,0.136,26,0.018,53,0.462,59,0.155,75,0.012,76,0.012,77,2.315,79,1.823,80,1.723,81,2.059,82,2.059,83,1.823,84,3.238,85,2.059,92,2.843,93,2.832,94,2.059,95,2.059,97,2.131,100,0.762,106,2.568,107,2.201,128,4.807,139,4.04,171,4.041,214,3.346,229,2.568,232,3.155,233,3.155,234,4.347,235,4.041,236,3.665,237,3.665,238,2.819,239,5.042,240,3.665,241,3.665,242,3.155,243,3.665,244,2.368,245,3.665,246,3.665,247,3.155,248,3.665,249,3.665,250,3.665]],["title/classes/AuthRepository.html",[0,0.164,251,2.414]],["body/classes/AuthRepository.html",[0,0.215,2,1.226,3,0.207,4,0.207,5,0.181,7,0.289,15,0.535,16,0.317,22,1.515,23,0.469,25,0.715,26,0.017,27,0.569,39,0.794,53,0.317,59,0.207,75,0.014,76,0.014,110,1.15,111,4.869,117,2.329,144,3.938,193,1.619,251,3.938,252,4.212,253,5.246,254,3.301,255,4.892,256,2.939,257,4.892]],["title/injectables/AuthService.html",[171,2.244,213,0.776]],["body/injectables/AuthService.html",[0,0.186,3,0.18,4,0.18,5,0.157,7,0.25,9,1.993,15,0.608,16,0.361,19,1.841,23,0.533,25,0.813,26,0.018,27,0.647,39,0.689,53,0.444,59,0.18,66,0.924,75,0.013,76,0.013,100,0.882,110,1.05,117,2.126,143,1.96,144,3.594,145,4.788,146,4.42,171,3.341,173,3.651,213,1.156,215,1.621,235,2.547,242,3.651,251,4.536,256,2.547,258,3.651,259,4.241,260,4.241,261,4.241,262,2.547,263,4.241,264,3.651,265,4.241,266,4.241,267,4.241]],["title/controllers/CreateAccountController.html",[98,2.618,138,1.5]],["body/controllers/CreateAccountController.html",[0,0.121,1,2.419,3,0.116,4,0.116,5,0.102,7,0.162,14,0.446,15,0.448,16,0.353,17,1.292,18,0.599,23,0.263,25,0.402,26,0.018,27,0.319,39,0.446,53,0.377,59,0.116,62,1.237,66,0.599,75,0.01,76,0.01,89,2.947,97,1.161,98,2.874,100,0.571,110,0.774,112,1.928,138,1.104,141,1.651,143,1.55,147,1.224,152,2.054,155,3.906,156,2.947,157,3.17,158,2.65,159,2.304,160,3.17,161,3.17,162,2.756,163,2.756,164,2.589,165,3.221,166,1.926,168,1.544,169,3.761,170,1.776,174,1.651,175,2.464,176,3.496,177,2.874,178,1.224,181,1.367,182,1.45,183,1.651,184,3.056,185,2.423,195,3.056,196,1.544,202,2.589,203,1.651,204,2.756,205,2.756,206,2.947,207,2.947,208,2.756,209,1.544,210,1.651,214,1.367,244,1.776,268,2.366,269,1.928,270,2.748,271,4.201,272,2.748,273,2.874,274,2.748,275,3.155,276,3.155,277,3.155,278,2.748,279,1.926,280,2.748,281,2.366,282,2.874,283,2.366,284,2.366,285,1.926,286,1.926,287,1.926,288,1.926,289,1.926,290,1.926,291,1.926,292,1.926,293,1.926,294,2.114,295,1.776,296,2.114,297,0.954,298,2.65,299,1,300,2.748]],["title/classes/CreateAccountDto.html",[0,0.164,271,2.414]],["body/classes/CreateAccountDto.html",[0,0.231,1,2.594,2,0.979,3,0.166,4,0.166,5,0.145,7,0.231,8,1.743,15,0.727,16,0.462,17,3.129,22,1.095,23,0.571,26,0.018,44,4.583,49,2.779,53,0.386,58,2.061,59,0.166,75,0.012,76,0.012,147,2.653,152,2.166,178,1.74,185,2.653,271,3.403,291,3.691,292,3.691,293,3.691,301,3.363,302,3.907,303,4.534,304,3.907,305,3.005,306,3.907,307,3.907,308,3.907,309,4.469,310,3.907,311,4.469,312,4.534,313,3.403,314,2.347,315,3.907]],["title/injectables/CreateAccountUseCase.html",[89,2.244,213,0.776]],["body/injectables/CreateAccountUseCase.html",[0,0.166,1,2.135,3,0.16,4,0.16,5,0.14,7,0.224,9,1.781,15,0.688,16,0.408,17,2.424,18,0.826,19,1.707,23,0.494,25,0.754,26,0.018,27,0.6,39,0.615,53,0.451,59,0.16,62,1.555,63,1.142,66,0.826,75,0.012,76,0.012,89,3.098,91,1.884,100,0.787,105,2.448,108,3.817,110,0.974,117,1.971,143,1.852,182,1.999,213,1.072,215,1.448,262,2.275,269,2.424,271,4.068,281,3.261,297,2.035,298,2.448,299,1.379,316,3.261,317,3.261,318,3.788,319,5.157,320,3.788,321,5.157,322,2.914,323,2.655,324,2.448,325,3.261,326,2.448,327,3.788,328,2.914,329,3.788,330,3.788]],["title/controllers/CreatePaymentController.html",[138,1.5,331,2.618]],["body/controllers/CreatePaymentController.html",[0,0.119,3,0.115,4,0.115,5,0.1,7,0.16,14,0.44,15,0.296,16,0.316,18,0.591,23,0.26,25,0.396,26,0.018,27,0.315,30,2.475,39,0.44,53,0.375,59,0.115,62,1.224,66,0.591,75,0.009,76,0.009,97,1.146,100,0.564,110,0.767,112,1.909,138,1.089,141,1.629,143,1.537,147,1.208,152,2.13,155,3.89,156,2.924,157,3.146,158,2.624,159,2.281,160,3.146,161,3.146,162,2.734,163,2.734,164,2.568,165,3.205,166,1.901,168,1.523,169,3.74,170,1.753,174,1.629,175,2.439,176,3.477,177,3.412,178,1.208,181,1.349,182,1.431,183,1.629,184,3.036,185,2.407,195,3.036,196,1.523,202,2.568,203,1.629,204,2.734,205,2.734,206,2.924,207,2.924,208,2.734,209,1.523,210,1.629,214,1.349,244,1.753,269,1.909,275,3.124,276,3.124,277,3.124,279,1.901,282,2.846,285,1.901,286,1.901,287,1.901,288,1.901,289,1.901,290,1.901,295,1.753,296,2.086,297,0.941,298,2.624,299,0.987,331,2.846,332,2.335,333,2.712,334,4.279,335,2.712,336,2.712,337,2.712,338,2.712,339,2.335,340,2.924,341,2.712,342,2.712,343,2.712,344,2.335,345,2.335,346,2.335,347,2.335,348,2.335,349,1.349,350,2.02,351,2.086,352,2.335,353,2.712]],["title/classes/CreatePaymentDto.html",[0,0.164,334,2.414]],["body/classes/CreatePaymentDto.html",[0,0.231,1,1.917,2,0.979,3,0.166,4,0.166,5,0.145,7,0.231,8,1.743,14,0.855,16,0.386,22,1.326,23,0.571,26,0.018,30,2.437,49,2.779,53,0.341,59,0.166,75,0.012,76,0.012,147,2.653,152,2.358,178,1.74,185,2.653,305,4.052,309,4.469,311,4.469,312,4.534,313,3.85,314,2.347,334,3.403,349,2.963,350,3.311,351,4.052,354,3.363,355,4.534,356,4.534,357,4.534,358,4.534,359,4.534,360,3.907,361,3.907,362,3.907,363,3.907,364,5.267]],["title/injectables/CreatePaymentUseCase.html",[213,0.776,340,2.244]],["body/injectables/CreatePaymentUseCase.html",[0,0.155,1,2.06,3,0.15,4,0.15,5,0.131,7,0.209,9,2.314,15,0.538,16,0.319,18,0.771,19,1.629,23,0.472,25,0.719,26,0.018,27,0.572,30,2.163,39,0.575,53,0.451,59,0.15,62,1.706,63,1.067,75,0.011,76,0.011,91,1.76,100,0.736,105,2.287,108,3.835,110,0.929,117,1.881,143,1.787,152,1.555,182,2.597,203,2.126,213,1.023,215,1.353,231,2.126,262,2.126,269,2.314,297,1.964,299,1.288,323,2.48,328,2.723,334,3.953,339,3.047,340,2.957,349,2.448,350,2.448,365,3.047,366,3.539,367,4.301,368,3.539,369,4.922,370,3.539,371,4.922,372,3.047,373,2.126,374,3.047,375,2.287,376,3.539,377,2.48,378,3.539,379,3.539,380,3.539,381,3.539,382,3.539,383,2.287,384,3.047]],["title/controllers/CreateUserController.html",[138,1.5,385,2.618]],["body/controllers/CreateUserController.html",[0,0.122,3,0.118,4,0.118,5,0.103,7,0.165,14,0.453,15,0.453,16,0.269,18,0.608,23,0.267,25,0.408,26,0.018,27,0.325,39,0.453,53,0.355,59,0.118,62,1.251,66,0.608,75,0.01,76,0.01,97,1.18,100,0.58,110,0.783,112,1.95,138,1.121,141,1.677,143,1.564,147,1.243,148,2.403,150,2.403,152,2.063,153,2.104,155,3.924,156,2.975,157,3.2,158,2.681,159,2.331,162,2.782,163,2.782,164,2.613,165,3.24,166,1.956,168,1.568,169,3.786,170,1.804,174,1.677,175,2.492,176,3.519,177,2.908,178,1.243,181,1.388,182,1.473,183,1.677,184,3.08,185,2.441,186,1.956,187,1.956,188,1.956,189,1.956,190,1.956,191,1.804,192,1.804,193,1.639,194,1.677,195,3.291,196,2.331,197,2.908,198,1.312,202,2.613,203,1.677,204,2.782,205,2.782,206,2.975,207,2.975,208,2.782,210,1.677,269,1.95,275,3.192,276,3.192,277,3.192,295,1.804,296,2.147,297,0.969,298,2.681,299,1.016,385,2.908,386,2.403,387,2.791,388,4.221,389,4.952,390,4.149,391,2.791,392,2.975,393,2.791,394,2.403,395,2.403,396,2.403,397,2.403,398,2.147,399,2.403,400,2.403,401,2.791]],["title/classes/CreateUserDto.html",[0,0.164,388,2.414]],["body/classes/CreateUserDto.html",[0,0.255,2,0.932,3,0.158,4,0.158,5,0.138,7,0.22,8,1.686,15,0.715,16,0.377,22,1.405,23,0.557,26,0.018,53,0.377,59,0.158,75,0.012,76,0.012,147,2.587,152,2.135,153,2.237,178,1.656,185,2.587,191,3.292,192,3.292,193,2.29,194,3.06,202,2.688,254,3.255,295,3.292,305,2.861,309,4.379,311,4.379,313,3.292,314,2.234,388,3.292,397,3.202,402,3.202,403,3.72,404,3.72,405,3.72,406,3.72,407,3.72,408,3.72,409,3.919,410,3.72,411,5.094,412,3.202,413,4.385,414,3.72,415,3.72,416,3.72,417,3.72]],["title/injectables/CreateUserUseCase.html",[213,0.776,392,2.244]],["body/injectables/CreateUserUseCase.html",[0,0.157,3,0.151,4,0.151,5,0.132,7,0.211,9,1.678,14,0.58,15,0.671,16,0.321,18,0.778,19,1.639,23,0.474,25,0.724,26,0.018,27,0.576,39,0.58,53,0.444,59,0.151,62,1.714,66,0.778,75,0.011,76,0.011,100,0.742,110,0.935,117,1.892,143,1.796,153,1.882,193,1.639,198,1.678,213,1.029,215,1.364,231,2.144,254,1.775,262,2.144,269,2.328,297,1.973,299,2.07,388,3.967,392,2.974,394,3.073,398,2.746,399,3.073,400,3.073,418,3.073,419,3.073,420,4.009,421,3.57,422,4.952,423,3.57,424,3.57,425,2.746,426,2.746,427,2.005,428,2.746,429,3.57,430,2.746,431,3.688,432,3.073,433,3.073,434,3.57,435,3.57,436,3.57,437,3.57,438,4.952,439,3.57,440,3.57,441,3.57,442,2.502,443,2.746,444,2.502,445,3.809]],["title/modules/DatabaseModule.html",[77,1.5,129,2.098]],["body/modules/DatabaseModule.html",[0,0.186,3,0.18,4,0.18,5,0.157,26,0.018,53,0.427,59,0.18,75,0.013,76,0.013,77,2.493,78,4.217,79,2.109,80,1.993,81,2.382,82,2.382,83,2.109,84,3.486,85,3.486,92,2.966,93,3.124,94,2.382,95,2.382,100,0.882,106,2.972,107,3.341,129,4.193,427,4.22,428,3.262,446,3.651,447,4.241,448,3.651,449,3.651,450,4.241,451,4.241]],["title/classes/ErrorFilter.html",[0,0.164,452,2.873]],["body/classes/ErrorFilter.html",[0,0.158,2,0.905,3,0.153,4,0.153,5,0.134,7,0.213,15,0.395,16,0.234,23,0.346,25,0.528,26,0.018,27,0.42,39,0.586,40,2.531,53,0.371,59,0.153,62,1.089,63,1.089,75,0.012,76,0.012,100,0.751,110,0.942,159,2.804,162,2.029,163,2.029,164,1.906,165,2.634,184,2.804,202,3.622,204,2.029,205,2.029,208,2.029,297,2.247,313,2.334,452,3.84,453,3.109,454,3.84,455,5.72,456,5.72,457,4.992,458,6.476,459,5.72,460,6.17,461,3.611,462,5.72,463,4.297,464,3.109,465,3.611,466,3.611,467,3.611,468,3.611,469,3.611,470,3.611,471,3.611,472,4.992,473,3.611,474,3.611,475,3.611,476,3.611,477,3.611,478,3.611,479,3.611,480,3.611,481,3.611,482,3.611,483,3.611,484,3.611,485,3.611,486,3.611]],["title/controllers/GetAccountByIdController.html",[99,2.618,138,1.5]],["body/controllers/GetAccountByIdController.html",[0,0.109,1,2.507,3,0.105,4,0.105,5,0.092,7,0.147,11,1.236,14,0.993,15,0.609,16,0.409,17,1.168,18,0.541,22,1.074,23,0.238,25,0.363,26,0.018,27,0.289,39,0.403,53,0.361,59,0.105,63,1.948,66,0.541,75,0.009,76,0.009,90,2.772,97,1.05,99,2.663,100,0.516,110,0.717,119,3.796,120,3.796,138,0.998,141,1.492,143,1.457,147,1.106,151,2.923,152,1.991,155,3.787,156,2.772,160,2.982,161,2.982,162,2.592,163,2.592,164,2.435,165,3.099,168,1.395,174,1.492,175,2.283,176,3.346,178,1.106,181,1.236,182,1.311,183,1.492,184,2.903,185,2.302,195,2.903,196,1.395,202,2.435,204,2.592,205,2.592,206,2.772,207,2.772,208,2.592,209,1.395,210,1.492,214,1.236,244,1.605,269,2.169,273,2.663,279,1.741,282,2.663,283,2.139,284,2.139,285,1.741,286,1.741,287,1.741,288,1.741,289,1.741,290,1.741,291,1.741,292,1.741,293,1.741,294,1.911,297,0.862,299,0.904,383,3.599,487,2.139,488,2.139,489,2.484,490,2.923,491,2.484,492,3.973,493,2.139,494,5.057,495,3.271,496,2.484,497,4.45,498,2.484,499,2.484,500,2.139,501,2.484,502,1.741,503,2.484,504,4.45,505,1.741,506,2.484,507,2.484,508,2.484,509,2.484,510,2.484]],["title/classes/GetAccountByIdDto.html",[0,0.164,511,2.873]],["body/classes/GetAccountByIdDto.html",[0,0.254,2,1.133,3,0.191,4,0.191,5,0.167,7,0.267,8,1.918,14,1.039,16,0.415,22,1.205,23,0.613,26,0.018,27,0.785,53,0.293,59,0.191,63,2.035,75,0.013,76,0.013,119,4.134,120,4.134,147,2.849,313,3.745,314,2.714,511,4.458,512,3.89,513,5.795,514,4.518,515,4.518,516,4.518,517,4.518,518,6.398,519,5.795,520,6.398]],["title/injectables/GetAccountByIdUseCase.html",[90,2.244,213,0.776]],["body/injectables/GetAccountByIdUseCase.html",[0,0.17,1,2.162,3,0.164,4,0.164,5,0.144,7,0.229,9,1.825,14,1.079,15,0.573,16,0.34,19,1.736,22,1.235,23,0.503,25,0.766,26,0.018,27,0.61,39,0.63,53,0.412,59,0.164,62,1.171,63,2.064,66,0.846,75,0.012,76,0.012,90,3.15,91,1.931,100,0.807,105,2.509,108,3.845,110,0.99,117,2.004,119,4.11,120,4.11,143,1.876,213,1.09,215,1.484,231,2.332,262,2.332,269,2.792,297,1.347,299,1.413,317,3.342,323,2.721,324,2.509,325,3.342,328,2.987,383,2.509,488,3.342,505,2.721,521,3.342,522,3.883,523,3.883,524,3.883,525,3.883]],["title/controllers/GetUserByEmailController.html",[138,1.5,526,2.618]],["body/controllers/GetUserByEmailController.html",[0,0.112,3,0.108,4,0.108,5,0.094,7,0.15,14,0.413,15,0.572,16,0.365,18,0.555,22,1.233,23,0.244,25,0.372,26,0.018,27,0.296,39,0.413,53,0.339,59,0.108,66,0.555,75,0.009,76,0.009,97,1.076,100,0.529,110,0.731,138,1.022,141,1.529,143,1.479,147,1.133,151,2.978,152,2.096,153,2.314,155,3.986,156,3.144,157,3.027,158,2.501,159,2.174,160,3.027,161,3.027,162,2.631,163,2.631,164,2.472,165,3.252,168,1.43,174,1.529,175,2.325,176,3.562,178,1.133,181,1.266,182,1.343,183,1.529,184,3.163,185,2.507,186,1.784,187,1.784,188,1.784,189,1.784,190,1.784,191,1.645,192,1.645,193,2.154,194,1.529,195,3.331,196,2.174,197,1.784,198,1.197,199,1.958,202,2.762,203,1.529,204,2.94,205,2.94,206,3.144,207,3.144,208,2.94,209,1.43,210,1.529,214,1.266,244,1.645,269,1.82,279,1.784,282,2.713,285,1.784,295,1.645,297,0.883,299,0.927,383,3.638,395,2.191,396,2.191,490,2.978,492,4.033,493,2.191,494,3.333,495,3.333,500,2.191,504,4.033,505,1.784,526,2.713,527,2.191,528,2.191,529,2.545,530,2.545,531,2.545,532,2.545,533,2.814,534,2.545,535,2.545,536,2.545]],["title/injectables/GetUserByEmailUseCase.html",[213,0.776,533,2.244]],["body/injectables/GetUserByEmailUseCase.html",[0,0.171,3,0.166,4,0.166,5,0.145,7,0.231,9,1.837,14,0.634,15,0.651,16,0.341,18,0.852,19,1.743,22,1.239,23,0.505,25,0.77,26,0.018,27,0.612,39,0.634,53,0.413,59,0.166,62,1.588,66,0.852,75,0.012,76,0.012,100,0.812,110,0.994,117,2.013,143,1.882,153,1.743,193,2.11,198,1.837,213,1.095,215,1.493,231,2.347,262,2.347,269,2.476,297,1.828,299,1.422,383,2.525,419,3.363,420,4.12,426,3.005,427,2.195,428,3.005,431,3.83,432,3.363,433,3.363,442,2.738,443,3.005,444,2.738,445,3.005,505,2.738,528,4.534,533,3.164,537,3.363,538,3.907,539,3.907,540,3.907,541,3.907,542,3.907]],["title/interfaces/IAccount.html",[31,2.618,543,2.098]],["body/interfaces/IAccount.html",[3,0.183,4,0.183,5,0.16,7,0.255,8,1.862,11,3.298,14,1.077,15,0.725,16,0.482,17,3.118,18,1.446,22,1.466,26,0.018,27,0.771,30,2.535,31,3.942,44,5.102,49,3.302,53,0.365,58,2.276,59,0.183,63,1.887,75,0.013,76,0.013,543,2.423,544,3.023,545,3.714,546,3.714]],["title/interfaces/IPayment.html",[543,2.098,547,2.618]],["body/interfaces/IPayment.html",[3,0.197,4,0.197,5,0.172,7,0.275,8,1.955,14,1.108,16,0.457,18,1.487,22,1.552,26,0.017,27,0.687,49,3.423,59,0.197,63,1.956,75,0.014,76,0.014,152,2.155,349,3.393,350,3.393,543,2.614,544,3.261,547,4.139,548,4.006]],["title/interfaces/IUser.html",[543,2.098,549,2.618]],["body/interfaces/IUser.html",[3,0.189,4,0.189,5,0.165,7,0.264,8,1.905,14,1.092,15,0.734,16,0.462,18,1.465,22,1.573,26,0.017,27,0.781,59,0.189,63,2.147,75,0.013,76,0.013,193,2.225,198,3.16,254,3.343,543,2.511,544,3.132,549,4.033,550,3.848]],["title/injectables/JwtStrategy.html",[213,0.776,234,2.414]],["body/injectables/JwtStrategy.html",[0,0.192,3,0.185,4,0.185,5,0.162,7,0.258,15,0.478,16,0.284,19,2.085,23,0.544,25,0.639,26,0.018,27,0.509,39,0.71,53,0.409,59,0.185,66,0.954,75,0.013,76,0.013,100,0.909,110,1.071,143,1.99,168,2.457,193,1.448,213,1.18,215,1.672,217,3.409,229,3.066,234,3.668,247,3.766,497,3.766,551,3.766,552,5.676,553,5.676,554,4.375,555,5.676,556,4.375,557,3.766,558,4.375,559,4.375,560,4.375,561,3.766,562,3.766,563,3.066,564,4.375,565,4.375,566,4.375,567,4.375,568,4.375,569,4.375,570,4.375]],["title/classes/LoginAuthDto.html",[0,0.164,146,2.414]],["body/classes/LoginAuthDto.html",[0,0.251,2,1.108,3,0.187,4,0.187,5,0.164,7,0.261,8,1.892,16,0.371,22,1.392,23,0.548,26,0.018,53,0.371,59,0.187,75,0.013,76,0.013,146,3.693,147,2.545,152,2.114,153,2.216,178,1.969,185,2.545,193,2.294,194,3.433,254,3.448,309,4.438,311,4.438,314,2.656,409,4.397,413,4.92,571,3.807,572,4.422,573,4.422,574,4.422,575,4.422]],["title/classes/Payment.html",[0,0.164,30,1.428]],["body/classes/Payment.html",[0,0.131,2,0.75,3,0.127,4,0.127,5,0.111,7,0.177,8,1.446,9,2.96,10,3.968,12,4.638,13,3.36,14,1.056,15,0.62,16,0.408,18,1.236,19,0.991,20,3.36,21,3.974,22,1.455,23,0.671,25,0.829,26,0.018,27,0.659,28,2.098,30,1.669,33,2.303,39,0.838,40,3.615,49,2.721,51,2.303,53,0.334,54,2.577,56,3.36,57,2.303,59,0.127,60,2.303,61,2.303,62,0.902,63,0.902,65,3.36,66,1.314,70,2.303,71,3.615,75,0.01,76,0.01,152,1.904,349,2.999,350,2.999,547,3.615,576,2.577,577,4.368,578,2.993,579,2.993,580,2.993,581,2.993,582,2.993,583,2.993,584,2.993,585,2.993,586,2.993,587,2.993,588,2.993,589,2.993,590,2.993,591,2.993,592,2.993,593,2.993,594,4.368,595,4.368,596,4.368,597,2.993,598,2.993,599,2.993]],["title/modules/PaymentModule.html",[77,1.5,130,2.414]],["body/modules/PaymentModule.html",[0,0.17,3,0.164,4,0.164,5,0.143,26,0.018,53,0.453,59,0.164,75,0.012,76,0.012,77,2.382,79,1.925,80,1.819,81,2.174,82,2.174,83,1.925,84,3.331,85,2.94,91,3.401,92,2.89,93,2.94,94,2.174,95,2.174,97,2.212,100,0.805,105,2.501,106,2.712,107,3.144,129,3.842,130,4.844,331,4.156,340,4.108,373,4.108,374,3.332,600,3.332,601,3.87,602,3.332,603,3.87,604,3.332,605,3.87,606,3.87]],["title/classes/PaymentRepository.html",[0,0.164,367,2.414]],["body/classes/PaymentRepository.html",[0,0.202,1,1.675,2,1.154,3,0.195,4,0.195,5,0.17,7,0.272,14,0.747,15,0.641,16,0.38,22,1.342,23,0.562,25,0.857,26,0.017,27,0.682,30,2.597,39,0.952,53,0.298,59,0.195,75,0.014,76,0.014,110,1.107,111,5.11,112,2.756,113,4.109,115,4.511,117,2.597,118,4.109,367,3.789,546,3.962,607,3.962,608,4.602,609,4.602]],["title/classes/PrismaAccountMapper.html",[0,0.164,326,2.414]],["body/classes/PrismaAccountMapper.html",[0,0.166,1,2.665,2,0.947,3,0.16,4,0.16,5,0.14,7,0.223,11,2.912,14,0.613,15,0.687,16,0.38,17,2.419,18,1.122,23,0.493,25,0.752,26,0.018,27,0.598,30,1.443,39,0.836,53,0.38,58,1.992,59,0.16,62,1.139,66,1.122,75,0.012,76,0.012,110,0.972,297,1.786,322,2.905,326,3.326,384,3.251,610,3.251,611,4.387,612,4.504,613,3.959,614,3.776,615,3.776,616,5.845,617,5.147,618,3.776,619,3.959,620,2.268,621,3.776,622,3.776,623,3.776,624,3.776,625,3.776,626,3.776,627,3.776,628,3.776,629,3.776,630,3.251,631,3.251,632,3.251]],["title/injectables/PrismaAccountRepository.html",[91,1.858,213,0.776]],["body/injectables/PrismaAccountRepository.html",[0,0.121,1,2.504,3,0.117,4,0.117,5,0.102,7,0.163,11,2.715,14,0.8,15,0.596,16,0.354,18,0.603,19,0.916,22,1.024,23,0.523,25,0.798,26,0.018,27,0.635,39,0.8,53,0.397,59,0.117,63,1.845,66,1.272,75,0.01,76,0.01,91,2.05,92,2.307,100,0.575,108,3.438,110,0.778,112,1.937,113,2.889,114,3.548,115,3.171,117,2.339,118,2.889,119,3.527,120,3.527,122,3.548,143,2.103,181,1.376,213,0.857,215,1.057,217,2.476,297,2.124,298,2.663,299,1.793,322,2.128,323,1.939,326,1.788,563,1.939,616,5.458,620,1.662,630,2.382,631,2.382,632,2.382,633,2.382,634,1.939,635,2.767,636,2.476,637,3.789,638,2.767,639,2.767,640,2.767,641,1.939,642,2.767,643,2.382,644,4.122,645,2.767,646,2.889,647,2.767,648,2.767,649,2.767,650,2.767,651,2.767,652,3.171,653,2.767,654,2.382,655,2.767,656,2.767,657,2.767,658,2.767,659,2.767,660,2.767,661,2.767]],["title/injectables/PrismaAuthRepository.html",[213,0.776,235,2.244]],["body/injectables/PrismaAuthRepository.html",[0,0.151,3,0.146,4,0.146,5,0.127,7,0.203,9,2.269,15,0.527,16,0.313,19,1.597,22,1.371,23,0.462,25,0.705,26,0.018,27,0.561,39,0.559,53,0.428,59,0.146,62,1.038,66,0.75,75,0.011,76,0.011,92,2.554,100,0.715,110,0.911,117,1.845,143,1.761,144,3.119,153,2,193,2,200,3.383,209,1.933,213,1.003,215,1.315,217,2.899,231,2.067,235,2.899,238,2.647,251,3.905,253,4.155,254,2.772,256,2.067,264,2.963,297,2.097,299,1.757,430,3.713,442,2.412,444,2.412,557,2.963,563,2.412,634,2.412,636,2.899,637,2.647,641,2.412,662,2.963,663,6.774,664,3.441,665,5.575,666,3.441,667,3.441,668,2.963,669,4.827,670,3.441,671,3.441,672,3.441,673,3.441]],["title/classes/PrismaPaymentMapper.html",[0,0.164,620,2.244]],["body/classes/PrismaPaymentMapper.html",[0,0.178,2,1.015,3,0.171,4,0.171,5,0.15,7,0.239,14,0.657,15,0.589,16,0.35,18,1.175,23,0.517,25,0.788,26,0.018,27,0.627,30,2.78,39,0.876,53,0.35,58,2.135,59,0.171,62,1.22,66,1.175,75,0.012,76,0.012,110,1.018,152,1.703,349,2.682,350,2.682,377,2.836,611,4.477,612,4.148,613,4.148,619,5.44,620,3.239,674,3.484,675,5.393,676,4.047,677,5.393,678,4.047,679,4.047,680,4.047,681,4.047,682,4.047,683,4.047,684,4.047,685,4.047,686,4.047,687,4.047,688,4.047]],["title/injectables/PrismaPaymentRepository.html",[213,0.776,373,2.244]],["body/injectables/PrismaPaymentRepository.html",[0,0.157,3,0.151,4,0.151,5,0.132,7,0.211,14,0.804,15,0.621,16,0.369,19,1.182,22,1.182,23,0.545,25,0.831,26,0.018,27,0.661,30,2.465,39,0.804,53,0.418,59,0.151,66,1.239,75,0.011,76,0.011,92,2.595,100,0.742,110,0.935,112,2.328,113,3.47,117,2.347,118,3.47,143,2.108,181,1.775,213,1.029,215,1.364,217,2.974,297,1.973,299,1.803,367,4.167,372,3.073,373,2.974,377,2.502,563,2.502,619,4.723,620,2.144,634,2.502,636,2.974,637,3.809,641,2.502,643,3.073,646,2.502,652,2.746,689,3.073,690,3.57,691,4.952,692,3.57,693,3.57,694,3.57,695,3.57,696,3.57,697,3.57,698,3.57,699,3.57]],["title/injectables/PrismaService.html",[92,1.578,213,0.776]],["body/injectables/PrismaService.html",[0,0.216,3,0.208,4,0.208,5,0.182,7,0.29,23,0.471,26,0.018,39,0.798,53,0.396,58,2.591,59,0.208,75,0.014,76,0.014,92,2.582,100,1.021,110,1.153,143,2.1,213,1.27,215,1.877,217,3.67,299,1.788,454,3.778,700,4.228,701,6.649,702,7.295,703,4.911,704,4.911]],["title/classes/PrismaUserMapper.html",[0,0.164,705,2.618]],["body/classes/PrismaUserMapper.html",[0,0.175,2,0.998,3,0.169,4,0.169,5,0.147,7,0.235,14,0.647,15,0.702,16,0.346,18,1.163,23,0.511,25,0.78,26,0.018,27,0.62,39,0.866,53,0.346,58,2.101,59,0.169,62,1.608,63,1.201,66,1.163,75,0.012,76,0.012,110,1.007,153,2.399,193,1.766,198,2.508,254,2.653,425,3.063,442,2.791,443,3.063,444,2.791,445,3.063,611,4.456,612,4.104,613,4.104,705,3.739,706,3.428,707,5.335,708,6.064,709,3.982,710,5.335,711,3.982,712,3.982,713,3.982,714,3.982,715,3.982,716,3.982,717,3.982,718,3.982]],["title/injectables/PrismaUserRepository.html",[213,0.776,427,2.098]],["body/injectables/PrismaUserRepository.html",[0,0.149,3,0.144,4,0.144,5,0.126,7,0.201,14,0.778,15,0.657,16,0.39,19,1.126,22,1.367,23,0.576,25,0.879,26,0.018,27,0.699,39,0.9,53,0.411,59,0.144,66,1.044,75,0.011,76,0.011,92,2.541,100,0.708,110,0.904,112,2.251,117,2.512,143,2.214,153,2.235,181,1.693,193,1.585,213,0.996,215,1.301,297,1.662,299,2.017,420,2.877,425,2.618,426,2.618,427,2.69,454,2.618,634,2.385,636,2.877,641,2.385,646,2.385,652,2.618,668,2.93,705,2.385,708,4.123,719,2.93,720,4.123,721,4.123,722,3.404,723,4.123,724,3.404,725,4.123,726,3.404,727,4.123,728,3.404,729,3.404,730,3.404,731,3.404,732,3.404,733,3.404]],["title/classes/ResponseAccountDto.html",[0,0.164,324,2.414]],["body/classes/ResponseAccountDto.html",[0,0.182,2,1.042,3,0.176,4,0.176,5,0.154,7,0.245,8,1.816,11,3.056,14,0.998,15,0.714,16,0.479,17,2.889,18,1.339,19,1.375,22,1.451,23,0.682,25,0.607,26,0.018,27,0.714,49,2.896,53,0.269,59,0.176,63,1.655,75,0.013,76,0.013,324,3.546,375,4.223,734,3.577,735,4.222,736,5.227,737,5.488,738,4.155,739,4.155,740,4.155,741,4.155,742,4.155,743,3.197]],["title/classes/ResponseAuthDto.html",[0,0.164,256,2.244]],["body/classes/ResponseAuthDto.html",[0,0.224,2,1.282,3,0.217,4,0.217,5,0.189,7,0.302,8,2.073,16,0.406,22,1.302,23,0.6,26,0.017,53,0.332,59,0.217,75,0.015,76,0.015,153,2.241,200,4.745,256,3.762,431,4.238,744,4.402,745,5.114,746,5.114]],["title/classes/ResponsePaymentDto.html",[0,0.164,375,2.414]],["body/classes/ResponsePaymentDto.html",[0,0.193,2,1.101,3,0.186,4,0.186,5,0.163,7,0.259,8,1.883,14,1.025,15,0.48,16,0.459,18,1.376,19,1.453,22,1.473,23,0.679,25,0.642,26,0.017,27,0.51,49,3.002,59,0.186,63,1.715,75,0.013,76,0.013,152,1.993,349,3.139,350,3.139,375,3.676,735,4.376,736,5.321,743,3.377,747,3.78,748,5.689,749,4.39,750,4.39,751,4.39,752,4.39]],["title/classes/ResponseUserDto.html",[0,0.164,431,2.244]],["body/classes/ResponseUserDto.html",[0,0.193,2,1.101,3,0.186,4,0.186,5,0.163,7,0.259,8,1.883,14,1.025,15,0.73,16,0.459,18,1.376,19,1.453,22,1.473,23,0.679,25,0.642,26,0.017,27,0.51,59,0.186,63,2.013,75,0.013,76,0.013,193,2.089,198,2.967,431,3.417,735,4.376,736,5.321,743,3.377,753,3.78,754,5.689,755,4.39,756,4.39,757,4.39,758,4.39]],["title/classes/User.html",[0,0.164,153,1.236]],["body/classes/User.html",[0,0.128,2,0.733,3,0.124,4,0.124,5,0.108,7,0.173,8,1.421,9,2.935,10,3.913,12,4.594,13,3.302,14,1.048,15,0.738,16,0.405,18,1.222,19,0.967,20,3.302,21,3.929,22,1.491,23,0.675,25,0.819,26,0.018,27,0.652,28,2.048,33,2.248,35,2.516,37,2.516,39,0.826,40,3.565,51,2.248,53,0.33,56,3.302,57,2.248,59,0.124,60,2.248,61,2.248,62,0.881,63,0.881,65,3.302,66,1.361,67,3.695,70,2.248,71,3.565,72,2.516,75,0.01,76,0.01,153,1.421,193,1.976,198,2.391,254,2.97,549,3.565,759,2.516,760,4.293,761,2.923,762,2.923,763,2.923,764,2.923,765,2.923,766,2.923,767,2.923,768,2.923,769,2.923,770,2.923,771,2.923,772,2.923,773,2.923,774,2.923,775,2.923,776,2.923,777,2.923,778,4.293,779,4.293,780,2.923,781,2.923,782,2.923]],["title/modules/UserModule.html",[77,1.5,131,2.414]],["body/modules/UserModule.html",[0,0.183,3,0.177,4,0.177,5,0.154,26,0.018,53,0.453,59,0.177,75,0.013,76,0.013,77,2.472,79,2.074,80,1.96,81,2.342,82,2.342,83,2.074,84,3.457,85,2.342,93,3.089,94,2.342,95,2.342,97,2.324,100,0.867,107,3.304,129,3.925,131,4.773,385,4.313,392,4.197,526,4.313,533,4.197,604,3.589,783,3.589,784,3.589,785,4.169,786,4.169,787,4.169,788,4.169,789,4.169,790,4.169]],["title/classes/UserRepository.html",[0,0.164,420,2.244]],["body/classes/UserRepository.html",[0,0.187,2,1.067,3,0.18,4,0.18,5,0.158,7,0.251,14,0.691,15,0.679,16,0.403,22,1.461,23,0.596,25,0.908,26,0.017,27,0.723,39,1.009,53,0.276,59,0.18,75,0.013,76,0.013,110,1.052,111,5.195,112,2.62,117,2.685,153,2.266,193,1.408,420,3.348,720,4.799,721,4.799,723,4.799,725,4.799,727,4.799,791,3.663,792,4.255,793,4.255,794,4.255,795,4.255]],["title/coverage.html",[796,4.398]],["body/coverage.html",[0,0.323,1,0.932,5,0.095,6,2.205,16,0.166,26,0.018,30,0.979,31,1.795,62,0.772,75,0.009,76,0.009,83,1.274,89,1.538,90,1.538,91,1.274,92,1.082,98,1.795,99,1.795,108,1.439,109,2.205,138,2.387,139,1.795,140,2.205,146,1.655,153,0.848,171,1.538,213,1.441,214,1.274,216,2.205,234,1.655,235,1.538,251,1.655,252,2.205,256,1.538,258,2.205,268,2.205,271,1.655,301,2.205,316,2.205,324,1.655,326,1.655,331,1.795,332,2.205,334,1.655,340,1.538,354,2.205,365,2.205,367,1.655,373,1.538,375,1.655,385,1.795,386,2.205,388,1.655,392,1.538,402,2.205,418,2.205,420,1.538,427,1.439,431,1.538,452,1.97,453,2.205,487,2.205,502,1.795,511,1.97,512,2.205,521,2.205,526,1.795,527,2.205,533,1.538,537,2.205,543,2.641,545,2.205,547,1.795,548,2.205,549,1.795,550,2.205,551,2.205,571,2.205,576,2.205,607,2.205,610,2.205,620,1.538,633,2.205,662,2.205,674,2.205,689,2.205,700,2.205,705,1.795,706,2.205,719,2.205,734,2.205,744,2.205,747,2.205,753,2.205,759,2.205,791,2.205,796,2.205,797,2.205,798,2.561,799,2.561,800,7.709,801,6.756,802,7.064,803,2.205,804,2.205,805,1.795,806,6.518,807,2.561,808,5.251,809,4.702,810,2.561,811,2.205,812,2.561,813,2.561,814,2.561,815,2.205]],["title/dependencies.html",[80,2.113,816,2.681]],["body/dependencies.html",[0,0.263,26,0.018,58,2.512,75,0.014,76,0.014,80,2.238,100,0.99,178,2.12,229,3.336,238,3.662,314,2.86,412,4.099,430,3.662,464,5.158,561,4.099,562,4.099,817,6.556,818,4.761,819,4.761,820,4.761,821,4.761,822,4.761,823,4.761,824,4.761,825,4.761,826,4.761,827,4.761,828,4.761,829,4.761,830,4.761,831,4.761,832,4.761,833,4.761,834,4.761,835,4.761,836,4.761,837,4.099,838,4.761,839,4.761]],["title/miscellaneous/functions.html",[840,2.182,841,3.87]],["body/miscellaneous/functions.html",[7,0.343,26,0.016,75,0.016,76,0.016,83,3.554,811,4.999,840,4.07,841,4.999,842,5.807]],["title/index.html",[7,0.184,843,3.114,844,3.114]],["body/index.html",[1,2.25,11,1.867,14,0.948,15,0.622,16,0.243,17,1.765,18,1.165,26,0.016,30,1.607,62,1.717,63,0.434,66,0.314,71,1.01,75,0.006,76,0.006,80,0.677,112,2.6,142,1.24,144,0.931,149,2.743,152,1.952,153,2.012,159,2.362,164,0.76,169,3.312,170,2.426,185,2.535,186,2.233,187,2.233,188,2.233,189,2.233,190,2.233,191,2.426,192,2.426,193,1.768,194,2.526,195,3.279,196,3.414,197,2.631,198,1.498,199,1.881,200,1.714,201,1.24,254,1.584,273,3.876,286,3.203,287,3.593,288,3.593,289,3.593,290,3.414,291,2.631,292,2.631,293,2.233,294,2.451,303,1.24,344,2.105,345,2.105,346,2.105,347,2.105,348,2.105,349,1.867,350,1.867,351,2.451,352,2.105,355,1.24,356,1.24,357,1.24,358,1.24,359,1.24,398,1.108,409,1.881,463,4.194,490,3.748,636,1.914,646,1.01,654,2.105,797,2.743,815,1.24,837,1.24,845,1.441,846,1.441,847,1.441,848,1.441,849,2.445,850,2.445,851,1.441,852,1.441,853,5.126,854,1.441,855,2.105,856,4.194,857,2.105,858,2.105,859,2.445,860,2.445,861,1.441,862,1.441,863,2.445,864,1.24,865,1.24,866,1.441,867,1.441,868,1.441,869,1.24,870,1.24,871,1.441,872,3.934,873,1.24,874,4.6,875,1.441,876,1.441,877,2.105,878,1.24,879,1.24,880,1.24,881,1.24,882,1.24,883,1.24,884,3.934,885,1.24,886,1.441,887,1.24,888,1.441,889,1.24,890,2.105,891,1.24,892,1.24,893,2.743,894,1.24,895,1.441,896,2.445,897,1.441,898,2.445,899,2.445,900,3.754,901,3.186,902,3.754,903,2.445,904,2.105,905,4.872,906,1.441,907,3.754,908,3.186,909,2.445,910,1.441,911,1.441,912,3.186,913,3.754,914,1.441,915,1.441,916,1.441,917,1.441,918,1.441,919,3.186,920,3.754,921,2.445,922,3.186,923,3.186,924,1.441,925,1.441,926,1.441,927,1.441,928,1.441,929,2.445,930,1.441,931,1.441,932,1.441,933,2.445,934,1.441,935,1.441,936,2.445,937,1.441,938,1.441,939,1.441,940,1.441,941,1.441,942,1.441,943,2.445,944,1.441,945,1.441,946,2.445,947,1.441,948,1.441,949,1.441,950,1.441,951,2.445,952,1.441,953,1.441,954,1.441,955,1.441,956,1.441,957,1.441,958,1.24,959,1.441,960,1.441,961,1.441,962,1.441,963,3.186,964,1.441,965,1.441,966,1.441,967,2.445,968,1.441,969,1.441,970,1.441,971,2.445,972,1.441,973,1.441,974,1.441,975,3.754,976,1.441,977,1.441,978,1.441,979,2.445,980,1.441,981,2.445,982,1.441,983,2.445,984,1.441,985,1.441,986,1.441,987,1.441,988,1.441,989,1.441,990,1.441,991,1.441,992,1.441,993,1.441,994,1.441,995,1.441,996,1.441,997,4.872,998,1.441,999,1.441,1000,1.24,1001,1.441,1002,1.441,1003,2.445,1004,1.24,1005,1.441,1006,2.445,1007,1.441,1008,1.441,1009,1.441,1010,1.441,1011,1.441,1012,1.441,1013,1.441,1014,1.441,1015,1.441,1016,1.441,1017,1.441]],["title/modules.html",[79,2.541]],["body/modules.html",[26,0.015,75,0.015,76,0.015,78,3.15,79,2.608,125,3.675,128,3.388,129,2.945,130,3.388,131,3.388,958,6.38,1018,7.411,1019,7.411,1020,7.411]],["title/overview.html",[1021,4.398]],["body/overview.html",[2,0.782,26,0.018,75,0.01,76,0.01,77,1.254,78,4.358,79,1.552,80,1.467,81,1.753,82,1.753,83,1.552,84,1.753,85,1.753,86,2.687,87,2.687,88,2.687,89,3.955,90,3.955,91,2.876,92,2.699,93,2.529,94,1.753,95,1.753,97,1.319,125,5,126,2.687,127,2.687,128,4.652,129,4.007,130,4.652,131,4.437,171,3.173,214,2.627,215,1.193,232,2.687,233,2.687,234,3.413,235,3.173,340,3.173,373,3.173,392,3.173,427,3.699,446,2.687,448,2.687,449,2.687,533,3.173,544,2.187,600,2.687,602,2.687,783,2.687,784,2.687,1000,2.687,1004,3.876,1021,2.687,1022,3.121,1023,3.121]],["title/properties.html",[8,1.488,816,2.681]],["body/properties.html",[8,1.594,11,2.395,26,0.017,75,0.014,76,0.014,152,1.521,273,3.375,636,2.893,855,4.146,856,4.146,857,4.146,858,4.146,864,4.146,865,4.146,869,4.146,870,4.146,872,4.146,873,4.146,874,4.146,877,5.674,878,4.146,879,4.146,880,4.146,881,4.146,882,4.146,883,4.146,884,5.195,885,4.146,887,4.146,889,4.146,890,5.195,891,4.146,892,4.146,893,4.146,894,4.146,904,4.146,1024,4.816,1025,4.816,1026,4.816,1027,4.816,1028,4.816,1029,4.816,1030,4.816,1031,4.816,1032,4.816,1033,4.816,1034,4.816]],["title/miscellaneous/typealiases.html",[840,2.182,1035,4.495]],["body/miscellaneous/typealiases.html",[7,0.343,16,0.377,21,4.736,26,0.016,75,0.016,76,0.016,840,4.07,1036,5.807,1037,5.807,1038,5.807]],["title/classes/viewModelAccount.html",[0,0.164,502,2.618]],["body/classes/viewModelAccount.html",[0,0.202,2,1.154,3,0.195,4,0.195,5,0.17,7,0.272,11,3.21,14,1.048,15,0.742,16,0.441,17,3.034,18,1.407,23,0.441,25,0.672,26,0.018,27,0.535,39,0.747,53,0.298,59,0.195,66,1.003,75,0.014,76,0.014,110,1.107,502,4.109,611,4.17,803,3.962,805,3.225,1039,5.556,1040,3.962,1041,4.602,1042,4.602,1043,4.602,1044,4.602]],["title/classes/viewModelPayment.html",[0,0.164,805,2.618]],["body/classes/viewModelPayment.html",[0,0.2,2,1.145,3,0.194,4,0.194,5,0.169,7,0.27,14,1.044,15,0.499,16,0.296,18,1.402,23,0.438,25,0.668,26,0.018,27,0.531,30,2.845,39,0.742,53,0.296,59,0.194,66,0.996,75,0.014,76,0.014,110,1.102,152,2.031,349,3.198,350,3.198,377,3.201,611,4.156,804,3.933,805,4.09,1039,5.537,1040,3.933,1045,4.568]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["0",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":1025,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":291,"title":{},"body":{"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["01d8",{"_index":287,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["01t06:30:12.114z",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["06",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["07",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["1",{"_index":996,"title":{},"body":{"index.html":{}}}],["10",{"_index":437,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["10.0.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":293,"title":{},"body":{"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["11cd6603",{"_index":286,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["12018f9b",{"_index":355,"title":{},"body":{"classes/CreatePaymentDto.html":{},"index.html":{}}}],["13",{"_index":1022,"title":{},"body":{"overview.html":{}}}],["1ce6",{"_index":345,"title":{},"body":{"controllers/CreatePaymentController.html":{},"index.html":{}}}],["1f436dd23c41",{"_index":348,"title":{},"body":{"controllers/CreatePaymentController.html":{},"index.html":{}}}],["2",{"_index":998,"title":{},"body":{"index.html":{}}}],["200",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["201",{"_index":275,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{}}}],["2024",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["214",{"_index":351,"title":{},"body":{"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"index.html":{}}}],["22",{"_index":1023,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1000,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3000:3000",{"_index":941,"title":{},"body":{"index.html":{}}}],["30t00:00:00.000z&enddate=2024",{"_index":1008,"title":{},"body":{"index.html":{}}}],["30t22:00:32.828z",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["30t22:00:32.976z",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["30t22:59:46.606z",{"_index":294,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["30t23:02:28.428z",{"_index":352,"title":{},"body":{"controllers/CreatePaymentController.html":{},"index.html":{}}}],["30t23:09:47.149z",{"_index":1017,"title":{},"body":{"index.html":{}}}],["30t23:59:59.999z",{"_index":1009,"title":{},"body":{"index.html":{}}}],["312",{"_index":1016,"title":{},"body":{"index.html":{}}}],["3cc0a7df0851",{"_index":290,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["3cc0a7df0851&startdate=2024",{"_index":1007,"title":{},"body":{"index.html":{}}}],["4",{"_index":1001,"title":{},"body":{"index.html":{}}}],["4.0.1",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{}}}],["401",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["404",{"_index":492,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["409",{"_index":389,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["4324",{"_index":346,"title":{},"body":{"controllers/CreatePaymentController.html":{},"index.html":{}}}],["44ab",{"_index":1013,"title":{},"body":{"index.html":{}}}],["45f990fa99c7",{"_index":359,"title":{},"body":{"classes/CreatePaymentDto.html":{},"index.html":{}}}],["474",{"_index":1010,"title":{},"body":{"index.html":{}}}],["47c3",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["4859",{"_index":356,"title":{},"body":{"classes/CreatePaymentDto.html":{},"index.html":{}}}],["48800cf4",{"_index":344,"title":{},"body":{"controllers/CreatePaymentController.html":{},"index.html":{}}}],["4d90",{"_index":288,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["4e21",{"_index":357,"title":{},"body":{"classes/CreatePaymentDto.html":{},"index.html":{}}}],["5",{"_index":1002,"title":{},"body":{"index.html":{}}}],["5.0.1",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["5.15.1",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["518430f391af",{"_index":1015,"title":{},"body":{"index.html":{}}}],["6",{"_index":1004,"title":{},"body":{"index.html":{},"overview.html":{}}}],["60m",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":1005,"title":{},"body":{"index.html":{}}}],["7.14.0",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["8318",{"_index":347,"title":{},"body":{"controllers/CreatePaymentController.html":{},"index.html":{}}}],["8438",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["8e1e",{"_index":1014,"title":{},"body":{"index.html":{}}}],["_id",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["a0f1",{"_index":358,"title":{},"body":{"classes/CreatePaymentDto.html":{},"index.html":{}}}],["a348",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["a800",{"_index":289,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["abstract",{"_index":111,"title":{},"body":{"classes/AccountRepository.html":{},"classes/AuthRepository.html":{},"classes/PaymentRepository.html":{},"classes/UserRepository.html":{}}}],["ac86414f",{"_index":1011,"title":{},"body":{"index.html":{}}}],["access",{"_index":959,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"coverage.html":{},"index.html":{}}}],["account'})@apiresponse({status",{"_index":274,"title":{},"body":{"controllers/CreateAccountController.html":{}}}],["account.balance",{"_index":384,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{},"classes/PrismaAccountMapper.html":{}}}],["account.createdat",{"_index":625,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["account.id",{"_index":622,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["account.module",{"_index":451,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["account.name",{"_index":623,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["account.payments",{"_index":632,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{}}}],["account.type",{"_index":624,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["account/payment",{"_index":962,"title":{},"body":{"index.html":{}}}],["account?id=11cd6603",{"_index":1003,"title":{},"body":{"index.html":{}}}],["accountdto",{"_index":321,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["accountid",{"_index":349,"title":{},"body":{"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"interfaces/IPayment.html":{},"classes/Payment.html":{},"classes/PrismaPaymentMapper.html":{},"classes/ResponsePaymentDto.html":{},"index.html":{},"classes/viewModelPayment.html":{}}}],["accountid(accountid",{"_index":597,"title":{},"body":{"classes/Payment.html":{}}}],["accountmodule",{"_index":78,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["accountraw",{"_index":616,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{}}}],["accountraw.balance",{"_index":628,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["accountraw.createdat",{"_index":629,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["accountraw.id",{"_index":630,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{}}}],["accountraw.name",{"_index":626,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["accountraw.payments",{"_index":659,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["accountraw.payments.map(prismapaymentmapper.todomain",{"_index":631,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{}}}],["accountraw.type",{"_index":627,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["accountrepository",{"_index":108,"title":{"classes/AccountRepository.html":{}},"body":{"classes/AccountRepository.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/PrismaAccountRepository.html":{},"coverage.html":{}}}],["accountrepository:14",{"_index":638,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["accountrepository:25",{"_index":639,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["accountrepository:51",{"_index":640,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["accounts",{"_index":858,"title":{},"body":{"index.html":{},"properties.html":{}}}],["accounttype",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"interfaces/IAccount.html":{}}}],["actions",{"_index":880,"title":{},"body":{"index.html":{},"properties.html":{}}}],["add",{"_index":982,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":953,"title":{},"body":{"index.html":{}}}],["aims",{"_index":866,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":398,"title":{},"body":{"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"index.html":{}}}],["amount",{"_index":350,"title":{},"body":{"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"interfaces/IPayment.html":{},"classes/Payment.html":{},"classes/PrismaPaymentMapper.html":{},"classes/ResponsePaymentDto.html":{},"index.html":{},"classes/viewModelPayment.html":{}}}],["amount(amount",{"_index":598,"title":{},"body":{"classes/Payment.html":{}}}],["another",{"_index":961,"title":{},"body":{"index.html":{}}}],["any).response",{"_index":476,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["api",{"_index":856,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apibearerauth",{"_index":282,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["apibody",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{}}}],["apioperation",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["apiproperty",{"_index":309,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["apiproperty({example",{"_index":405,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiquery",{"_index":504,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["apiresponse",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["apitags",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["apitags('account",{"_index":283,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/GetAccountByIdController.html":{}}}],["apitags('auth",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('payment",{"_index":342,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["apitags('user",{"_index":395,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{}}}],["application",{"_index":896,"title":{},"body":{"index.html":{}}}],["application/account/controller/createaccountcontroller/createaccountcontroller",{"_index":101,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/account/controller/getaccountbyidcontroller/getaccountbyidcontroller",{"_index":102,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/account/usecase/createaccountusecase/createaccountusecase",{"_index":103,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/account/usecase/getaccountbyidusecase/getaccountbyidusecase",{"_index":104,"title":{},"body":{"modules/AccountModule.html":{}}}],["application/auth/controller/auth.controller",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{}}}],["application/auth/service/auth.service",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["application/payment/controller/createpaymentcontroller/createpaymentcontroller",{"_index":606,"title":{},"body":{"modules/PaymentModule.html":{}}}],["application/payment/usecase/createpaymentusecase/createpaymentusecase",{"_index":605,"title":{},"body":{"modules/PaymentModule.html":{}}}],["application/payment/viewmodels/payment.viewmodel",{"_index":1042,"title":{},"body":{"classes/viewModelAccount.html":{}}}],["applications",{"_index":852,"title":{},"body":{"index.html":{}}}],["apply",{"_index":942,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":125,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciate",{"_index":964,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":460,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["array",{"_index":655,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["array.isarray(errorresponse.message",{"_index":477,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["async",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{}}}],["auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["authcontroller",{"_index":139,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["authenticated",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":214,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":128,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1032,"title":{},"body":{"properties.html":{}}}],["authrepository",{"_index":251,"title":{"classes/AuthRepository.html":{}},"body":{"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/PrismaAuthRepository.html":{},"coverage.html":{}}}],["authrepository:16",{"_index":666,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["authservice",{"_index":171,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":299,"title":{},"body":{"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{}}}],["b",{"_index":978,"title":{},"body":{"index.html":{}}}],["bad",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{}}}],["badrequestexception",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{}}}],["badrequestexception('account",{"_index":382,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["balance",{"_index":17,"title":{},"body":{"classes/Account.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/GetAccountByIdController.html":{},"interfaces/IAccount.html":{},"classes/PrismaAccountMapper.html":{},"classes/ResponseAccountDto.html":{},"index.html":{},"classes/viewModelAccount.html":{}}}],["balance(balance",{"_index":74,"title":{},"body":{"classes/Account.html":{}}}],["bank",{"_index":273,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{},"properties.html":{}}}],["bcrypt",{"_index":430,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/PrismaAuthRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":670,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["below",{"_index":973,"title":{},"body":{"index.html":{}}}],["best",{"_index":886,"title":{},"body":{"index.html":{}}}],["body",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"index.html":{}}}],["bootstrap",{"_index":83,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":912,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1020,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":958,"title":{},"body":{"index.html":{},"modules.html":{}}}],["build",{"_index":936,"title":{},"body":{"index.html":{}}}],["building",{"_index":848,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":219,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":221,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch",{"_index":456,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(exception",{"_index":457,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(httpexception",{"_index":467,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["cd",{"_index":918,"title":{},"body":{"index.html":{}}}],["changes",{"_index":980,"title":{},"body":{"index.html":{}}}],["check",{"_index":379,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["checkout",{"_index":977,"title":{},"body":{"index.html":{}}}],["checks",{"_index":991,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AccountRepository.html":{},"classes/AuthRepository.html":{},"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorFilter.html":{},"classes/GetAccountByIdDto.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"classes/AuthRepository.html":{},"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorFilter.html":{},"classes/GetAccountByIdDto.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["click",{"_index":952,"title":{},"body":{"index.html":{}}}],["clone",{"_index":909,"title":{},"body":{"index.html":{}}}],["cluster_accountmodule",{"_index":86,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":87,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":88,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":446,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":449,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_imports",{"_index":447,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["cluster_databasemodule_providers",{"_index":448,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":600,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":601,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":602,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":783,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":785,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":784,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":863,"title":{},"body":{"index.html":{}}}],["commit",{"_index":981,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":390,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["conflictexception",{"_index":400,"title":{},"body":{"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{}}}],["conflictexception('email",{"_index":440,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["const",{"_index":297,"title":{},"body":{"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/Account.html":{},"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/Payment.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{}}}],["constructor(accountrepository",{"_index":317,"title":{},"body":{"injectables/CreateAccountUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{}}}],["constructor(authrepository",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(partial",{"_index":735,"title":{},"body":{"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{}}}],["constructor(paymentrepository",{"_index":366,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["constructor(prisma",{"_index":634,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["constructor(private",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["constructor(props",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["constructor(userrepository",{"_index":419,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["container",{"_index":939,"title":{},"body":{"index.html":{}}}],["contents",{"_index":897,"title":{},"body":{"index.html":{}}}],["context",{"_index":224,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["continuous",{"_index":881,"title":{},"body":{"index.html":{},"properties.html":{}}}],["contributing",{"_index":970,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":903,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":965,"title":{},"body":{"index.html":{}}}],["controller",{"_index":138,"title":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"coverage.html":{}}}],["controller('account",{"_index":284,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/GetAccountByIdController.html":{}}}],["controller('auth",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('payment",{"_index":343,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["controller('user",{"_index":396,"title":{},"body":{"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":796,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":112,"title":{},"body":{"classes/AccountRepository.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["create(account",{"_index":115,"title":{},"body":{"classes/AccountRepository.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaAccountRepository.html":{}}}],["create(payment",{"_index":691,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["create(user",{"_index":723,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["createaccountcontroller",{"_index":98,"title":{"controllers/CreateAccountController.html":{}},"body":{"modules/AccountModule.html":{},"controllers/CreateAccountController.html":{},"coverage.html":{}}}],["createaccountdto",{"_index":271,"title":{"classes/CreateAccountDto.html":{}},"body":{"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"coverage.html":{}}}],["createaccountusecase",{"_index":89,"title":{"injectables/CreateAccountUseCase.html":{}},"body":{"modules/AccountModule.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":277,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{}}}],["createdat",{"_index":18,"title":{},"body":{"classes/Account.html":{},"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"classes/Payment.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"index.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["createdpayment",{"_index":695,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["createpaymentcontroller",{"_index":331,"title":{"controllers/CreatePaymentController.html":{}},"body":{"controllers/CreatePaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["createpaymentdto",{"_index":334,"title":{"classes/CreatePaymentDto.html":{}},"body":{"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"coverage.html":{}}}],["createpaymentdto})@apibearerauth()@apioperation({summary",{"_index":336,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["createpaymentusecase",{"_index":340,"title":{"injectables/CreatePaymentUseCase.html":{}},"body":{"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"modules/PaymentModule.html":{},"coverage.html":{},"overview.html":{}}}],["createusercontroller",{"_index":385,"title":{"controllers/CreateUserController.html":{}},"body":{"controllers/CreateUserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":388,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["createuserusecase",{"_index":392,"title":{"injectables/CreateUserUseCase.html":{}},"body":{"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["crypto",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["ctx",{"_index":468,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["ctx.getrequest",{"_index":471,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["ctx.getresponse",{"_index":470,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["current",{"_index":292,"title":{},"body":{"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/GetAccountByIdController.html":{},"index.html":{}}}],["data",{"_index":646,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{}}}],["database",{"_index":872,"title":{},"body":{"index.html":{},"properties.html":{}}}],["database.module",{"_index":604,"title":{},"body":{"modules/PaymentModule.html":{},"modules/UserModule.html":{}}}],["database_url=\\njwt_secret",{"_index":932,"title":{},"body":{"index.html":{}}}],["databasemodule",{"_index":129,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":63,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"classes/Payment.html":{},"injectables/PrismaAccountRepository.html":{},"classes/PrismaUserMapper.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["date})@apiquery({name",{"_index":498,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["db",{"_index":947,"title":{},"body":{"index.html":{}}}],["ddd",{"_index":892,"title":{},"body":{"index.html":{},"properties.html":{}}}],["declarations",{"_index":82,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"controllers/GetUserByEmailController.html":{},"classes/LoginAuthDto.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["delete",{"_index":720,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["delete(id",{"_index":725,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["delivery",{"_index":883,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dependencies",{"_index":80,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployment",{"_index":878,"title":{},"body":{"index.html":{},"properties.html":{}}}],["description",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"interfaces/IPayment.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PrismaPaymentMapper.html":{},"classes/ResponsePaymentDto.html":{},"index.html":{},"properties.html":{},"classes/viewModelPayment.html":{}}}],["description(description",{"_index":599,"title":{},"body":{"classes/Payment.html":{}}}],["design",{"_index":891,"title":{},"body":{"index.html":{},"properties.html":{}}}],["designed",{"_index":1027,"title":{},"body":{"properties.html":{}}}],["detailed",{"_index":948,"title":{},"body":{"index.html":{}}}],["dev",{"_index":945,"title":{},"body":{"index.html":{}}}],["developed",{"_index":864,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":877,"title":{},"body":{"index.html":{},"properties.html":{}}}],["df618536",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["din",{"_index":853,"title":{},"body":{"index.html":{}}}],["din.v2",{"_index":854,"title":{},"body":{"index.html":{}}}],["dindin.v2",{"_index":1026,"title":{},"body":{"properties.html":{}}}],["directly",{"_index":957,"title":{},"body":{"index.html":{}}}],["directory",{"_index":917,"title":{},"body":{"index.html":{}}}],["docker",{"_index":874,"title":{},"body":{"index.html":{},"properties.html":{}}}],["documentation",{"_index":797,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["domain",{"_index":889,"title":{},"body":{"index.html":{},"properties.html":{}}}],["domain/dtos/createaccountdto",{"_index":281,"title":{},"body":{"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{}}}],["domain/dtos/createpaymentdto",{"_index":339,"title":{},"body":{"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{}}}],["domain/dtos/createuserdto",{"_index":394,"title":{},"body":{"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{}}}],["domain/dtos/loginauthdto",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["domain/dtos/responseaccountdto",{"_index":325,"title":{},"body":{"injectables/CreateAccountUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{}}}],["domain/dtos/responseauthdto",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaAuthRepository.html":{}}}],["domain/dtos/responsepaymentdto",{"_index":376,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["domain/dtos/responseuserdto",{"_index":432,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["domain/entities/account",{"_index":322,"title":{},"body":{"injectables/CreateAccountUseCase.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{}}}],["domain/entities/payment",{"_index":377,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/viewModelPayment.html":{}}}],["domain/entities/user",{"_index":425,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["domain/repositories/account.repository",{"_index":323,"title":{},"body":{"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/PrismaAccountRepository.html":{}}}],["domain/repositories/auth.repository",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/repositories/payment.repository",{"_index":372,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["domain/repositories/user.repository",{"_index":426,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaUserRepository.html":{}}}],["driven",{"_index":890,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dto",{"_index":424,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["dto.email",{"_index":435,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["dto.name",{"_index":434,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["dtos/responseauthdto",{"_index":257,"title":{},"body":{"classes/AuthRepository.html":{}}}],["e",{"_index":931,"title":{},"body":{"index.html":{}}}],["each",{"_index":950,"title":{},"body":{"index.html":{}}}],["early",{"_index":653,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["easing",{"_index":1028,"title":{},"body":{"properties.html":{}}}],["echo",{"_index":930,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":849,"title":{},"body":{"index.html":{}}}],["email",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthRepository.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["email'})@apiresponse({status",{"_index":531,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["email(email",{"_index":781,"title":{},"body":{"classes/User.html":{}}}],["empty",{"_index":658,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["enddate",{"_index":120,"title":{},"body":{"classes/AccountRepository.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/PrismaAccountRepository.html":{}}}],["endpoint",{"_index":951,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":902,"title":{},"body":{"index.html":{}}}],["english",{"_index":862,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":654,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"index.html":{}}}],["entities/account",{"_index":124,"title":{},"body":{"classes/AccountRepository.html":{}}}],["entities/payment",{"_index":546,"title":{},"body":{"interfaces/IAccount.html":{},"classes/PaymentRepository.html":{}}}],["entities/user",{"_index":795,"title":{},"body":{"classes/UserRepository.html":{}}}],["env",{"_index":929,"title":{},"body":{"index.html":{}}}],["environment",{"_index":925,"title":{},"body":{"index.html":{}}}],["err",{"_index":227,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["error",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["errorfilter",{"_index":452,"title":{"classes/ErrorFilter.html":{}},"body":{"classes/ErrorFilter.html":{},"coverage.html":{}}}],["errorresponse",{"_index":475,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorresponse.message",{"_index":482,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorresponse.message.message",{"_index":481,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorresponse.message[0",{"_index":478,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["eslint/typescript",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["estree",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":656,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["example",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"classes/LoginAuthDto.html":{},"index.html":{}}}],["exception",{"_index":462,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exception.getstatus",{"_index":472,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exception.message",{"_index":473,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exception.name",{"_index":484,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exceptionfilter",{"_index":455,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["execute",{"_index":269,"title":{},"body":{"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["execute(@body",{"_index":296,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{}}}],["execute(@query('email",{"_index":535,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["execute(accountdto",{"_index":319,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["execute(createaccountdto",{"_index":270,"title":{},"body":{"controllers/CreateAccountController.html":{}}}],["execute(createpaymentdto",{"_index":333,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["execute(createuserdto",{"_index":387,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["execute(dto",{"_index":422,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["execute(email",{"_index":528,"title":{},"body":{"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["execute(id",{"_index":488,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{}}}],["execute(paymentdto",{"_index":369,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["executioncontext",{"_index":222,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["exists",{"_index":380,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["expiresin",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["explore",{"_index":956,"title":{},"body":{"index.html":{}}}],["export",{"_index":59,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["exports",{"_index":85,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":464,"title":{},"body":{"classes/ErrorFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":217,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjzdwiioijkzjyxoduzni1hmzq4ltq3yzmtodqzoc1myjqwztdhmwm1mwiilcjlbwfpbci6impvag4uzg9lqgv4yw1wbguuy29tiiwiawf0ijoxnze5nzg4mtu2lcjlehaioje3mtk3ote3ntz9.lltlntb7x3iik6figlwjte1zccyklburapv8u0mxngw",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["f3a9",{"_index":1012,"title":{},"body":{"index.html":{}}}],["false",{"_index":497,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"injectables/JwtStrategy.html":{}}}],["fb40e7a1c51b",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["feature",{"_index":975,"title":{},"body":{"index.html":{}}}],["feature/my",{"_index":979,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"coverage.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["filter",{"_index":1006,"title":{},"body":{"index.html":{}}}],["find",{"_index":490,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["findbyemail",{"_index":721,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyemail(email",{"_index":727,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["findbyid",{"_index":113,"title":{},"body":{"classes/AccountRepository.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["findbyid(id",{"_index":118,"title":{},"body":{"classes/AccountRepository.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["fix",{"_index":976,"title":{},"body":{"index.html":{}}}],["follow",{"_index":907,"title":{},"body":{"index.html":{}}}],["follows",{"_index":885,"title":{},"body":{"index.html":{},"properties.html":{}}}],["fork",{"_index":974,"title":{},"body":{"index.html":{}}}],["format",{"_index":397,"title":{},"body":{"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{}}}],["format'})@transform",{"_index":404,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["found",{"_index":383,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["framework",{"_index":847,"title":{},"body":{"index.html":{}}}],["free",{"_index":876,"title":{},"body":{"index.html":{}}}],["function",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":841,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getaccountbyidcontroller",{"_index":99,"title":{"controllers/GetAccountByIdController.html":{}},"body":{"modules/AccountModule.html":{},"controllers/GetAccountByIdController.html":{},"coverage.html":{}}}],["getaccountbyiddto",{"_index":511,"title":{"classes/GetAccountByIdDto.html":{}},"body":{"classes/GetAccountByIdDto.html":{},"coverage.html":{}}}],["getaccountbyidusecase",{"_index":90,"title":{"injectables/GetAccountByIdUseCase.html":{}},"body":{"modules/AccountModule.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["getaccountid",{"_index":580,"title":{},"body":{"classes/Payment.html":{}}}],["getamount",{"_index":584,"title":{},"body":{"classes/Payment.html":{}}}],["getbalance",{"_index":46,"title":{},"body":{"classes/Account.html":{}}}],["getcreatedat",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["getdescription",{"_index":588,"title":{},"body":{"classes/Payment.html":{}}}],["getemail",{"_index":765,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["getname",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/User.html":{}}}],["getpassword",{"_index":769,"title":{},"body":{"classes/User.html":{}}}],["getting",{"_index":843,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":41,"title":{},"body":{"classes/Account.html":{}}}],["getupdatedat",{"_index":774,"title":{},"body":{"classes/User.html":{}}}],["getuserbyemailcontroller",{"_index":526,"title":{"controllers/GetUserByEmailController.html":{}},"body":{"controllers/GetUserByEmailController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserbyemailusecase",{"_index":533,"title":{"injectables/GetUserByEmailUseCase.html":{}},"body":{"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["git",{"_index":913,"title":{},"body":{"index.html":{}}}],["github",{"_index":879,"title":{},"body":{"index.html":{},"properties.html":{}}}],["gte",{"_index":650,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["guards/auth.guard",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["guidelines",{"_index":990,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":220,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":225,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":429,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["hash(dto.password",{"_index":436,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["hassle",{"_index":875,"title":{},"body":{"index.html":{}}}],["haven't",{"_index":935,"title":{},"body":{"index.html":{}}}],["helped",{"_index":966,"title":{},"body":{"index.html":{}}}],["host",{"_index":459,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["host.switchtohttp",{"_index":469,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpexception",{"_index":458,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["https://github.com/walttinho/din",{"_index":914,"title":{},"body":{"index.html":{}}}],["iaccount",{"_index":31,"title":{"interfaces/IAccount.html":{}},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"coverage.html":{}}}],["id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"index.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["id'})@apiresponse({status",{"_index":491,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["identifier",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":937,"title":{},"body":{"index.html":{}}}],["implements",{"_index":454,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{}}}],["import",{"_index":53,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["imports",{"_index":107,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":649,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["including",{"_index":1030,"title":{},"body":{"properties.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["information",{"_index":949,"title":{},"body":{"index.html":{}}}],["infrastructure/database/prisma/mappers/prisma.account.mapper",{"_index":327,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["infrastructure/database/prisma/prisma.service",{"_index":106,"title":{},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{}}}],["infrastructure/database/prisma/repository/prisma.account.repository",{"_index":105,"title":{},"body":{"modules/AccountModule.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"modules/PaymentModule.html":{}}}],["infrastructure/database/prisma/repository/prisma.auth.repository",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["infrastructure/database/prisma/repository/prisma.payment.respository",{"_index":374,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{},"modules/PaymentModule.html":{}}}],["infrastructure/database/prisma/repository/prisma.user.repository",{"_index":428,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["inherited",{"_index":637,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["initial",{"_index":303,"title":{},"body":{"classes/CreateAccountDto.html":{},"index.html":{}}}],["inject",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["inject(prismaaccountrepository",{"_index":328,"title":{},"body":{"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{}}}],["inject(prismaauthrepository",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(prismapaymentrepository",{"_index":378,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["inject(prismauserrepository",{"_index":433,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["injectable",{"_index":213,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["injectables",{"_index":215,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"overview.html":{}}}],["install",{"_index":920,"title":{},"body":{"index.html":{}}}],["installation",{"_index":898,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":474,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["instructions",{"_index":972,"title":{},"body":{"index.html":{}}}],["integration",{"_index":882,"title":{},"body":{"index.html":{},"properties.html":{}}}],["interactions",{"_index":873,"title":{},"body":{"index.html":{},"properties.html":{}}}],["interactive",{"_index":955,"title":{},"body":{"index.html":{}}}],["interested",{"_index":969,"title":{},"body":{"index.html":{}}}],["interface",{"_index":543,"title":{"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":544,"title":{},"body":{"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["interfaces/iaccount",{"_index":55,"title":{},"body":{"classes/Account.html":{}}}],["interfaces/ipayment",{"_index":593,"title":{},"body":{"classes/Payment.html":{}}}],["interfaces/iuser",{"_index":777,"title":{},"body":{"classes/User.html":{}}}],["internal",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["internalservererrorexception",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["invalid",{"_index":295,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetUserByEmailController.html":{}}}],["ipayment",{"_index":547,"title":{"interfaces/IPayment.html":{}},"body":{"interfaces/IPayment.html":{},"classes/Payment.html":{},"coverage.html":{}}}],["isdatestring",{"_index":520,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["isemail",{"_index":413,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["isenum",{"_index":310,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["isenum(accounttype",{"_index":315,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["isnotempty",{"_index":311,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{}}}],["isnotempty()@apiproperty({example",{"_index":574,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["isnotempty()@isemail",{"_index":403,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isemail()@apiproperty({example",{"_index":572,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["isnotempty()@isenum(accounttype)@apiproperty({example",{"_index":307,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["isnotempty()@isnumber()@ispositive()@apiproperty({example",{"_index":361,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isnotempty()@ispositive()@apiproperty({example",{"_index":302,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["isnotempty()@isstring()@apiproperty({example",{"_index":305,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@minlength(8)@apiproperty({example",{"_index":408,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":364,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isobject",{"_index":465,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["isobject(errorresponse.message",{"_index":479,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["isoptional",{"_index":518,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["isoptional()@isdatestring",{"_index":513,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["ispositive",{"_index":312,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{}}}],["isstring",{"_index":313,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorFilter.html":{},"classes/GetAccountByIdDto.html":{}}}],["isstring(errorresponse.message.message",{"_index":480,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["isuuid",{"_index":519,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["isuuid()@isstring",{"_index":515,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["it's",{"_index":657,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["iuser",{"_index":549,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["john",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["john.doe@example.com",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetUserByEmailController.html":{},"classes/LoginAuthDto.html":{},"index.html":{}}}],["jwt",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":663,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["jwtstrategy",{"_index":234,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":81,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":904,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":995,"title":{},"body":{"index.html":{}}}],["line",{"_index":987,"title":{},"body":{"index.html":{}}}],["locally",{"_index":906,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":466,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["login",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/PrismaAuthRepository.html":{},"index.html":{}}}],["login(@body",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":253,"title":{},"body":{"classes/AuthRepository.html":{},"injectables/PrismaAuthRepository.html":{}}}],["login(loginauthdto",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginauthdto",{"_index":146,"title":{"classes/LoginAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["loginauthdto.password",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["lte",{"_index":651,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["machine",{"_index":934,"title":{},"body":{"index.html":{}}}],["make",{"_index":967,"title":{},"body":{"index.html":{}}}],["managing",{"_index":857,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mappers/prisma.account.mapper",{"_index":642,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["mappers/prisma.payment.mapper",{"_index":643,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["mappers/prisma.user.mapper",{"_index":729,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["master",{"_index":911,"title":{},"body":{"index.html":{}}}],["matching",{"_index":76,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["message",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["metadata",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":110,"title":{},"body":{"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["migrate",{"_index":944,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":900,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":840,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":994,"title":{},"body":{"index.html":{}}}],["modern",{"_index":1029,"title":{},"body":{"properties.html":{}}}],["module",{"_index":77,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module/account.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["module/database.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["module/payment.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":79,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"index.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["name(name",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/User.html":{}}}],["navigate",{"_index":916,"title":{},"body":{"index.html":{}}}],["needed",{"_index":927,"title":{},"body":{"index.html":{}}}],["nest",{"_index":993,"title":{},"body":{"index.html":{}}}],["nestauthguard",{"_index":228,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["nestauthguard('jwt",{"_index":218,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["nestjs",{"_index":865,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":100,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"modules/PaymentModule.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/PrismaAuthRepository.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":229,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"classes/LoginAuthDto.html":{},"dependencies.html":{}}}],["netto",{"_index":1034,"title":{},"body":{"properties.html":{}}}],["new",{"_index":62,"title":{},"body":{"classes/Account.html":{},"injectables/AuthGuard.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/Payment.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["node.js",{"_index":846,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":505,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{}}}],["notfoundexception(`account",{"_index":525,"title":{},"body":{"injectables/GetAccountByIdUseCase.html":{}}}],["notfoundexception(`user",{"_index":541,"title":{},"body":{"injectables/GetUserByEmailUseCase.html":{}}}],["npm",{"_index":922,"title":{},"body":{"index.html":{}}}],["npx",{"_index":943,"title":{},"body":{"index.html":{}}}],["null",{"_index":652,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["number",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"classes/Payment.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{}}}],["object.assign(this",{"_index":743,"title":{},"body":{"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{}}}],["onmoduleinit",{"_index":702,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":985,"title":{},"body":{"index.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["origin",{"_index":984,"title":{},"body":{"index.html":{}}}],["orm",{"_index":870,"title":{},"body":{"index.html":{},"properties.html":{}}}],["out",{"_index":95,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1021,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":940,"title":{},"body":{"index.html":{}}}],["package",{"_index":816,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":860,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["partial",{"_index":736,"title":{},"body":{"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{}}}],["pass",{"_index":665,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["passing",{"_index":992,"title":{},"body":{"index.html":{}}}],["passport",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":254,"title":{},"body":{"classes/AuthRepository.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"interfaces/IUser.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaUserMapper.html":{},"classes/User.html":{},"index.html":{}}}],["password(password",{"_index":782,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["payload",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaAuthRepository.html":{}}}],["payload.email",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":30,"title":{"classes/Payment.html":{}},"body":{"classes/Account.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"interfaces/IAccount.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"coverage.html":{},"index.html":{},"classes/viewModelPayment.html":{}}}],["payment'})@apiresponse({status",{"_index":337,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["payment.accountid",{"_index":680,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["payment.amount",{"_index":681,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["payment.createdat",{"_index":683,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["payment.description",{"_index":682,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["payment.id",{"_index":679,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["paymentdto",{"_index":371,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["paymentmodule",{"_index":130,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentraw",{"_index":619,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["paymentraw.accountid",{"_index":684,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["paymentraw.amount",{"_index":685,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["paymentraw.createdat",{"_index":687,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["paymentraw.description",{"_index":686,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["paymentraw.id",{"_index":688,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["paymentrepository",{"_index":367,"title":{"classes/PaymentRepository.html":{}},"body":{"injectables/CreatePaymentUseCase.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"coverage.html":{}}}],["paymentrepository:13",{"_index":692,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["paymentrepository:21",{"_index":693,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["payments",{"_index":11,"title":{},"body":{"classes/Account.html":{},"controllers/GetAccountByIdController.html":{},"interfaces/IAccount.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"classes/ResponseAccountDto.html":{},"index.html":{},"properties.html":{},"classes/viewModelAccount.html":{}}}],["payments?.map((payment",{"_index":1043,"title":{},"body":{"classes/viewModelAccount.html":{}}}],["please",{"_index":971,"title":{},"body":{"index.html":{}}}],["portuguese",{"_index":861,"title":{},"body":{"index.html":{}}}],["post",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"index.html":{}}}],["post()@apioperation({summary",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{}}}],["practices",{"_index":887,"title":{},"body":{"index.html":{},"properties.html":{}}}],["prefix",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["prisma",{"_index":636,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{},"index.html":{},"properties.html":{}}}],["prisma.account.repository.ts",{"_index":647,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["prisma.payment.mapper",{"_index":621,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["prisma.service",{"_index":641,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["prisma/client",{"_index":58,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"interfaces/IAccount.html":{},"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"dependencies.html":{}}}],["prismaaccountmapper",{"_index":326,"title":{"classes/PrismaAccountMapper.html":{}},"body":{"injectables/CreateAccountUseCase.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"coverage.html":{}}}],["prismaaccountmapper.todomain(accountraw",{"_index":660,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["prismaaccountmapper.toprisma(account",{"_index":644,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["prismaaccountmapper.toprisma(result",{"_index":330,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["prismaaccountrepository",{"_index":91,"title":{"injectables/PrismaAccountRepository.html":{}},"body":{"modules/AccountModule.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"modules/PaymentModule.html":{},"injectables/PrismaAccountRepository.html":{},"coverage.html":{},"overview.html":{}}}],["prismaauthrepository",{"_index":235,"title":{"injectables/PrismaAuthRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaAuthRepository.html":{},"coverage.html":{},"overview.html":{}}}],["prismaclient",{"_index":701,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismapaymentmapper",{"_index":620,"title":{"classes/PrismaPaymentMapper.html":{}},"body":{"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"coverage.html":{}}}],["prismapaymentmapper.todomain(createdpayment",{"_index":697,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["prismapaymentmapper.todomain(paymentraw",{"_index":699,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["prismapaymentmapper.toprisma(payment",{"_index":694,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["prismapaymentrepository",{"_index":373,"title":{"injectables/PrismaPaymentRepository.html":{}},"body":{"injectables/CreatePaymentUseCase.html":{},"modules/PaymentModule.html":{},"injectables/PrismaPaymentRepository.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservice",{"_index":92,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["prismausermapper",{"_index":705,"title":{"classes/PrismaUserMapper.html":{}},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["prismausermapper.todomain(user",{"_index":732,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["prismausermapper.toprisma(user",{"_index":730,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["prismauserrepository",{"_index":427,"title":{"injectables/PrismaUserRepository.html":{}},"body":{"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaUserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/Account.html":{},"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/Payment.html":{},"injectables/PrismaAuthRepository.html":{},"classes/User.html":{}}}],["process.env.jwt_secret",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["progressive",{"_index":845,"title":{},"body":{"index.html":{}}}],["project",{"_index":884,"title":{},"body":{"index.html":{},"properties.html":{}}}],["project's",{"_index":988,"title":{},"body":{"index.html":{}}}],["promise",{"_index":117,"title":{},"body":{"classes/AccountRepository.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/CreateAccountUseCase.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/GetAccountByIdDto.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"properties.html":{}}}],["props",{"_index":12,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["props.createdat",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["props.payments",{"_index":64,"title":{},"body":{"classes/Account.html":{}}}],["provide",{"_index":867,"title":{},"body":{"index.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["pull",{"_index":986,"title":{},"body":{"index.html":{}}}],["push",{"_index":983,"title":{},"body":{"index.html":{}}}],["query",{"_index":500,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["query('enddate",{"_index":508,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["query('id",{"_index":506,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["query('startdate",{"_index":507,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["randomuuid",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["read",{"_index":859,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["reflect",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":910,"title":{},"body":{"index.html":{}}}],["request",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["request.method",{"_index":485,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["request.originalurl",{"_index":486,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["required",{"_index":494,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["reset",{"_index":94,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":463,"title":{},"body":{"classes/ErrorFilter.html":{},"index.html":{}}}],["response.status(status).json",{"_index":483,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["responseaccountdto",{"_index":324,"title":{"classes/ResponseAccountDto.html":{}},"body":{"injectables/CreateAccountUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"classes/ResponseAccountDto.html":{},"coverage.html":{}}}],["responseauthdto",{"_index":256,"title":{"classes/ResponseAuthDto.html":{}},"body":{"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/PrismaAuthRepository.html":{},"classes/ResponseAuthDto.html":{},"coverage.html":{}}}],["responsepaymentdto",{"_index":375,"title":{"classes/ResponsePaymentDto.html":{}},"body":{"injectables/CreatePaymentUseCase.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponsePaymentDto.html":{},"coverage.html":{}}}],["responseuserdto",{"_index":431,"title":{"classes/ResponseUserDto.html":{}},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponseUserDto.html":{},"coverage.html":{}}}],["restful",{"_index":855,"title":{},"body":{"index.html":{},"properties.html":{}}}],["result",{"_index":298,"title":{},"body":{"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"injectables/PrismaAccountRepository.html":{}}}],["results",{"_index":75,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/Account.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/Payment.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/User.html":{},"index.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["returns",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/JwtStrategy.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["robust",{"_index":895,"title":{},"body":{"index.html":{}}}],["route",{"_index":997,"title":{},"body":{"index.html":{}}}],["run",{"_index":905,"title":{},"body":{"index.html":{}}}],["running",{"_index":899,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":850,"title":{},"body":{"index.html":{}}}],["schema",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["seamless",{"_index":871,"title":{},"body":{"index.html":{}}}],["secret",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["securepassword123",{"_index":409,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginAuthDto.html":{},"index.html":{}}}],["seed",{"_index":946,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":901,"title":{},"body":{"index.html":{}}}],["server",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"index.html":{}}}],["service/auth.service",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{},"index.html":{}}}],["setaccountid(accountid",{"_index":582,"title":{},"body":{"classes/Payment.html":{}}}],["setamount(amount",{"_index":586,"title":{},"body":{"classes/Payment.html":{}}}],["setbalance(balance",{"_index":48,"title":{},"body":{"classes/Account.html":{}}}],["setdescription(description",{"_index":590,"title":{},"body":{"classes/Payment.html":{}}}],["setemail(email",{"_index":767,"title":{},"body":{"classes/User.html":{}}}],["setname(name",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/User.html":{}}}],["setpassword(password",{"_index":771,"title":{},"body":{"classes/User.html":{}}}],["settype(type",{"_index":43,"title":{},"body":{"classes/Account.html":{}}}],["side",{"_index":851,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"modules/DatabaseModule.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaService.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["src/.../main.ts",{"_index":842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../replace.ts",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["src/application/account/controller/createaccountcontroller/createaccountcontroller.ts",{"_index":268,"title":{},"body":{"controllers/CreateAccountController.html":{},"coverage.html":{}}}],["src/application/account/controller/createaccountcontroller/createaccountcontroller.ts:75",{"_index":278,"title":{},"body":{"controllers/CreateAccountController.html":{}}}],["src/application/account/controller/getaccountbyidcontroller/getaccountbyidcontroller.ts",{"_index":487,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"coverage.html":{}}}],["src/application/account/controller/getaccountbyidcontroller/getaccountbyidcontroller.ts:78",{"_index":499,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["src/application/account/usecase/createaccountusecase/createaccountusecase.ts",{"_index":316,"title":{},"body":{"injectables/CreateAccountUseCase.html":{},"coverage.html":{}}}],["src/application/account/usecase/createaccountusecase/createaccountusecase.ts:10",{"_index":318,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["src/application/account/usecase/createaccountusecase/createaccountusecase.ts:16",{"_index":320,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["src/application/account/usecase/getaccountbyidusecase/getaccountbyidusecase.ts",{"_index":521,"title":{},"body":{"injectables/GetAccountByIdUseCase.html":{},"coverage.html":{}}}],["src/application/account/usecase/getaccountbyidusecase/getaccountbyidusecase.ts:13",{"_index":523,"title":{},"body":{"injectables/GetAccountByIdUseCase.html":{}}}],["src/application/account/usecase/getaccountbyidusecase/getaccountbyidusecase.ts:7",{"_index":522,"title":{},"body":{"injectables/GetAccountByIdUseCase.html":{}}}],["src/application/account/viewmodels/account.viewmodel.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"classes/viewModelAccount.html":{}}}],["src/application/account/viewmodels/account.viewmodel.ts:4",{"_index":1041,"title":{},"body":{"classes/viewModelAccount.html":{}}}],["src/application/auth/controller/auth.controller.ts",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/application/auth/controller/auth.controller.ts:70",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/application/auth/service/auth.service.ts",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/application/auth/service/auth.service.ts:13",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/application/auth/service/auth.service.ts:8",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/application/payment/controller/createpaymentcontroller/createpaymentcontroller.ts",{"_index":332,"title":{},"body":{"controllers/CreatePaymentController.html":{},"coverage.html":{}}}],["src/application/payment/controller/createpaymentcontroller/createpaymentcontroller.ts:76",{"_index":338,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["src/application/payment/usecase/createpaymentusecase/createpaymentusecase.ts",{"_index":365,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{},"coverage.html":{}}}],["src/application/payment/usecase/createpaymentusecase/createpaymentusecase.ts:11",{"_index":368,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["src/application/payment/usecase/createpaymentusecase/createpaymentusecase.ts:19",{"_index":370,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["src/application/payment/viewmodels/payment.viewmodel.ts",{"_index":804,"title":{},"body":{"coverage.html":{},"classes/viewModelPayment.html":{}}}],["src/application/payment/viewmodels/payment.viewmodel.ts:3",{"_index":1045,"title":{},"body":{"classes/viewModelPayment.html":{}}}],["src/application/user/controller/createusercontroller/createusercontroller",{"_index":787,"title":{},"body":{"modules/UserModule.html":{}}}],["src/application/user/controller/createusercontroller/createusercontroller.ts",{"_index":386,"title":{},"body":{"controllers/CreateUserController.html":{},"coverage.html":{}}}],["src/application/user/controller/createusercontroller/createusercontroller.ts:66",{"_index":391,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["src/application/user/controller/getuserbyemailcontroller/getuserbyemailcontroller",{"_index":789,"title":{},"body":{"modules/UserModule.html":{}}}],["src/application/user/controller/getuserbyemailcontroller/getuserbyemailcontroller.ts",{"_index":527,"title":{},"body":{"controllers/GetUserByEmailController.html":{},"coverage.html":{}}}],["src/application/user/controller/getuserbyemailcontroller/getuserbyemailcontroller.ts:88",{"_index":532,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["src/application/user/usecase/createuserusecase/createuserusecase",{"_index":788,"title":{},"body":{"modules/UserModule.html":{}}}],["src/application/user/usecase/createuserusecase/createuserusecase.ts",{"_index":418,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["src/application/user/usecase/createuserusecase/createuserusecase.ts:10",{"_index":421,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["src/application/user/usecase/createuserusecase/createuserusecase.ts:15",{"_index":423,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["src/application/user/usecase/getuserbyemailusecase/getuserbyemailusecase",{"_index":790,"title":{},"body":{"modules/UserModule.html":{}}}],["src/application/user/usecase/getuserbyemailusecase/getuserbyemailusecase.ts",{"_index":537,"title":{},"body":{"injectables/GetUserByEmailUseCase.html":{},"coverage.html":{}}}],["src/application/user/usecase/getuserbyemailusecase/getuserbyemailusecase.ts:12",{"_index":539,"title":{},"body":{"injectables/GetUserByEmailUseCase.html":{}}}],["src/application/user/usecase/getuserbyemailusecase/getuserbyemailusecase.ts:7",{"_index":538,"title":{},"body":{"injectables/GetUserByEmailUseCase.html":{}}}],["src/domain/dtos/createaccountdto.ts",{"_index":301,"title":{},"body":{"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["src/domain/dtos/createaccountdto.ts:12",{"_index":306,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["src/domain/dtos/createaccountdto.ts:17",{"_index":308,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["src/domain/dtos/createaccountdto.ts:25",{"_index":304,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["src/domain/dtos/createpaymentdto.ts",{"_index":354,"title":{},"body":{"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["src/domain/dtos/createpaymentdto.ts:11",{"_index":360,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["src/domain/dtos/createpaymentdto.ts:17",{"_index":362,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["src/domain/dtos/createpaymentdto.ts:25",{"_index":363,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["src/domain/dtos/createuserdto.ts",{"_index":402,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/domain/dtos/createuserdto.ts:18",{"_index":406,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/domain/dtos/createuserdto.ts:26",{"_index":410,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/domain/dtos/createuserdto.ts:9",{"_index":407,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/domain/dtos/getaccountbyiddto.ts",{"_index":512,"title":{},"body":{"classes/GetAccountByIdDto.html":{},"coverage.html":{}}}],["src/domain/dtos/getaccountbyiddto.ts:10",{"_index":517,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["src/domain/dtos/getaccountbyiddto.ts:14",{"_index":514,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["src/domain/dtos/getaccountbyiddto.ts:6",{"_index":516,"title":{},"body":{"classes/GetAccountByIdDto.html":{}}}],["src/domain/dtos/loginauthdto.ts",{"_index":571,"title":{},"body":{"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["src/domain/dtos/loginauthdto.ts:11",{"_index":573,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["src/domain/dtos/loginauthdto.ts:18",{"_index":575,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["src/domain/dtos/responseaccountdto.ts",{"_index":734,"title":{},"body":{"classes/ResponseAccountDto.html":{},"coverage.html":{}}}],["src/domain/dtos/responseaccountdto.ts:4",{"_index":740,"title":{},"body":{"classes/ResponseAccountDto.html":{}}}],["src/domain/dtos/responseaccountdto.ts:5",{"_index":741,"title":{},"body":{"classes/ResponseAccountDto.html":{}}}],["src/domain/dtos/responseaccountdto.ts:6",{"_index":742,"title":{},"body":{"classes/ResponseAccountDto.html":{}}}],["src/domain/dtos/responseaccountdto.ts:7",{"_index":738,"title":{},"body":{"classes/ResponseAccountDto.html":{}}}],["src/domain/dtos/responseaccountdto.ts:8",{"_index":739,"title":{},"body":{"classes/ResponseAccountDto.html":{}}}],["src/domain/dtos/responseaccountdto.ts:9",{"_index":737,"title":{},"body":{"classes/ResponseAccountDto.html":{}}}],["src/domain/dtos/responseauthdto.ts",{"_index":744,"title":{},"body":{"classes/ResponseAuthDto.html":{},"coverage.html":{}}}],["src/domain/dtos/responseauthdto.ts:4",{"_index":746,"title":{},"body":{"classes/ResponseAuthDto.html":{}}}],["src/domain/dtos/responseauthdto.ts:5",{"_index":745,"title":{},"body":{"classes/ResponseAuthDto.html":{}}}],["src/domain/dtos/responsepaymentdto.ts",{"_index":747,"title":{},"body":{"classes/ResponsePaymentDto.html":{},"coverage.html":{}}}],["src/domain/dtos/responsepaymentdto.ts:2",{"_index":752,"title":{},"body":{"classes/ResponsePaymentDto.html":{}}}],["src/domain/dtos/responsepaymentdto.ts:3",{"_index":749,"title":{},"body":{"classes/ResponsePaymentDto.html":{}}}],["src/domain/dtos/responsepaymentdto.ts:4",{"_index":750,"title":{},"body":{"classes/ResponsePaymentDto.html":{}}}],["src/domain/dtos/responsepaymentdto.ts:5",{"_index":751,"title":{},"body":{"classes/ResponsePaymentDto.html":{}}}],["src/domain/dtos/responsepaymentdto.ts:6",{"_index":748,"title":{},"body":{"classes/ResponsePaymentDto.html":{}}}],["src/domain/dtos/responseuserdto.ts",{"_index":753,"title":{},"body":{"classes/ResponseUserDto.html":{},"coverage.html":{}}}],["src/domain/dtos/responseuserdto.ts:2",{"_index":757,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["src/domain/dtos/responseuserdto.ts:3",{"_index":758,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["src/domain/dtos/responseuserdto.ts:4",{"_index":756,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["src/domain/dtos/responseuserdto.ts:5",{"_index":755,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["src/domain/dtos/responseuserdto.ts:6",{"_index":754,"title":{},"body":{"classes/ResponseUserDto.html":{}}}],["src/domain/entities/account.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/domain/entities/account.ts:10",{"_index":24,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:24",{"_index":34,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:28",{"_index":36,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:32",{"_index":42,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:36",{"_index":47,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:40",{"_index":52,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:44",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:48",{"_index":45,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:52",{"_index":50,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:8",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/account.ts:9",{"_index":29,"title":{},"body":{"classes/Account.html":{}}}],["src/domain/entities/payment.ts",{"_index":576,"title":{},"body":{"classes/Payment.html":{},"coverage.html":{}}}],["src/domain/entities/payment.ts:13",{"_index":579,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:17",{"_index":581,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:21",{"_index":585,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:25",{"_index":589,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:29",{"_index":592,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:33",{"_index":583,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:37",{"_index":587,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:41",{"_index":591,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:6",{"_index":578,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/payment.ts:7",{"_index":577,"title":{},"body":{"classes/Payment.html":{}}}],["src/domain/entities/user.ts",{"_index":759,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/domain/entities/user.ts:17",{"_index":762,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:21",{"_index":763,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:25",{"_index":766,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:29",{"_index":770,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:33",{"_index":773,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:37",{"_index":775,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:41",{"_index":764,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:45",{"_index":768,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:49",{"_index":772,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:6",{"_index":761,"title":{},"body":{"classes/User.html":{}}}],["src/domain/entities/user.ts:7",{"_index":760,"title":{},"body":{"classes/User.html":{}}}],["src/domain/interfaces/iaccount.ts",{"_index":545,"title":{},"body":{"interfaces/IAccount.html":{},"coverage.html":{}}}],["src/domain/interfaces/ipayment.ts",{"_index":548,"title":{},"body":{"interfaces/IPayment.html":{},"coverage.html":{}}}],["src/domain/interfaces/iuser.ts",{"_index":550,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/domain/repositories/account.repository.ts",{"_index":109,"title":{},"body":{"classes/AccountRepository.html":{},"coverage.html":{}}}],["src/domain/repositories/account.repository.ts:10",{"_index":123,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:4",{"_index":116,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/domain/repositories/account.repository.ts:5",{"_index":121,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/domain/repositories/auth.repository",{"_index":667,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["src/domain/repositories/auth.repository.ts",{"_index":252,"title":{},"body":{"classes/AuthRepository.html":{},"coverage.html":{}}}],["src/domain/repositories/auth.repository.ts:4",{"_index":255,"title":{},"body":{"classes/AuthRepository.html":{}}}],["src/domain/repositories/payment.repository.ts",{"_index":607,"title":{},"body":{"classes/PaymentRepository.html":{},"coverage.html":{}}}],["src/domain/repositories/payment.repository.ts:4",{"_index":608,"title":{},"body":{"classes/PaymentRepository.html":{}}}],["src/domain/repositories/payment.repository.ts:5",{"_index":609,"title":{},"body":{"classes/PaymentRepository.html":{}}}],["src/domain/repositories/user.repository.ts",{"_index":791,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/domain/repositories/user.repository.ts:4",{"_index":792,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/domain/repositories/user.repository.ts:5",{"_index":794,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/domain/repositories/user.repository.ts:6",{"_index":793,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/filters/error.filter.ts",{"_index":453,"title":{},"body":{"classes/ErrorFilter.html":{},"coverage.html":{}}}],["src/filters/error.filter.ts:12",{"_index":461,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["src/guards/auth.guard.ts",{"_index":216,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:10",{"_index":223,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:14",{"_index":226,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts",{"_index":610,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts:16",{"_index":615,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts:6",{"_index":618,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts",{"_index":674,"title":{},"body":{"classes/PrismaPaymentMapper.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts:14",{"_index":676,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts:4",{"_index":678,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts",{"_index":706,"title":{},"body":{"classes/PrismaUserMapper.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts:16",{"_index":709,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts:5",{"_index":711,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["src/infrastructure/database/prisma/prisma.service.ts",{"_index":700,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/prisma.service.ts:6",{"_index":703,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.account.repository.ts",{"_index":633,"title":{},"body":{"injectables/PrismaAccountRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.account.repository.ts:9",{"_index":635,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.auth.repository.ts",{"_index":662,"title":{},"body":{"injectables/PrismaAuthRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.auth.repository.ts:8",{"_index":664,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.payment.respository.ts",{"_index":689,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.payment.respository.ts:8",{"_index":690,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.user.repository.ts",{"_index":719,"title":{},"body":{"injectables/PrismaUserRepository.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.user.repository.ts:11",{"_index":724,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.user.repository.ts:19",{"_index":728,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.user.repository.ts:31",{"_index":726,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/infrastructure/database/prisma/repository/prisma.user.repository.ts:8",{"_index":722,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["src/main.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/account.module.ts",{"_index":96,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/module/auth.module.ts",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/module/database.module.ts",{"_index":450,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/module/payment.module.ts",{"_index":603,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/module/user.module.ts",{"_index":786,"title":{},"body":{"modules/UserModule.html":{}}}],["src/strategies/jwt.strategy.ts",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/strategies/jwt.strategy.ts:15",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/strategies/jwt.strategy.ts:6",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utils/replace",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{}}}],["src/utils/replace.ts",{"_index":1038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start:dev",{"_index":933,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":119,"title":{},"body":{"classes/AccountRepository.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/PrismaAccountRepository.html":{}}}],["started",{"_index":844,"title":{"index.html":{}},"body":{}}],["statements",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":611,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["status",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["statuscode",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["steps",{"_index":908,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"classes/AuthRepository.html":{},"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["string})@apibearerauth()@apioperation({summary",{"_index":530,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["string})@apiquery({name",{"_index":496,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["style",{"_index":989,"title":{},"body":{"index.html":{}}}],["sub",{"_index":672,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["successfully",{"_index":276,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{}}}],["such",{"_index":888,"title":{},"body":{"index.html":{}}}],["summary",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["super",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"injectables/PrismaPaymentRepository.html":{}}}],["super.canactivate(context",{"_index":230,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":1018,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1019,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":837,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["system",{"_index":868,"title":{},"body":{"index.html":{}}}],["t",{"_index":938,"title":{},"body":{"index.html":{}}}],["table",{"_index":815,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["tdd",{"_index":894,"title":{},"body":{"index.html":{},"properties.html":{}}}],["test",{"_index":893,"title":{},"body":{"index.html":{},"properties.html":{}}}],["this.$connect",{"_index":704,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._id",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["this.accountrepository.create(account",{"_index":329,"title":{},"body":{"injectables/CreateAccountUseCase.html":{}}}],["this.accountrepository.findbyid",{"_index":524,"title":{},"body":{"injectables/GetAccountByIdUseCase.html":{}}}],["this.accountrepository.findbyid(accountid",{"_index":381,"title":{},"body":{"injectables/CreatePaymentUseCase.html":{}}}],["this.authrepository.login(loginauthdto.email",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(loginauthdto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.createaccountusecase.execute(createaccountdto",{"_index":300,"title":{},"body":{"controllers/CreateAccountController.html":{}}}],["this.createpaymentusecase.execute(createpaymentdto",{"_index":353,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["this.createuserusecase.execute(createuserdto",{"_index":401,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["this.getaccountbyidusecase.execute",{"_index":509,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["this.getuserbyemailusecase.execute(email",{"_index":536,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["this.jwtservice.sign(payload",{"_index":673,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["this.prisma.account.create",{"_index":645,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["this.prisma.account.findunique",{"_index":648,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["this.prisma.account.update",{"_index":661,"title":{},"body":{"injectables/PrismaAccountRepository.html":{}}}],["this.prisma.payment.create",{"_index":696,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["this.prisma.payment.findunique",{"_index":698,"title":{},"body":{"injectables/PrismaPaymentRepository.html":{}}}],["this.prisma.user.create",{"_index":731,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.delete",{"_index":733,"title":{},"body":{"injectables/PrismaUserRepository.html":{}}}],["this.prisma.user.findunique",{"_index":668,"title":{},"body":{"injectables/PrismaAuthRepository.html":{},"injectables/PrismaUserRepository.html":{}}}],["this.props",{"_index":60,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["this.props.accountid",{"_index":594,"title":{},"body":{"classes/Payment.html":{}}}],["this.props.amount",{"_index":595,"title":{},"body":{"classes/Payment.html":{}}}],["this.props.balance",{"_index":69,"title":{},"body":{"classes/Account.html":{}}}],["this.props.createdat",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["this.props.description",{"_index":596,"title":{},"body":{"classes/Payment.html":{}}}],["this.props.email",{"_index":778,"title":{},"body":{"classes/User.html":{}}}],["this.props.name",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/User.html":{}}}],["this.props.password",{"_index":779,"title":{},"body":{"classes/User.html":{}}}],["this.props.type",{"_index":68,"title":{},"body":{"classes/Account.html":{}}}],["this.props.updatedat",{"_index":780,"title":{},"body":{"classes/User.html":{}}}],["this.userrepository.create(user",{"_index":441,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.findbyemail(dto.email",{"_index":439,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.findbyemail(email",{"_index":540,"title":{},"body":{"injectables/GetUserByEmailUseCase.html":{}}}],["throw",{"_index":231,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CreatePaymentUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/GetAccountByIdUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaAuthRepository.html":{}}}],["timestamp",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["today",{"_index":968,"title":{},"body":{"index.html":{}}}],["todomain",{"_index":612,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{}}}],["todomain(accountraw",{"_index":614,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["todomain(paymentraw",{"_index":675,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["todomain(userraw",{"_index":707,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["tohttp",{"_index":1039,"title":{},"body":{"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["tohttp(undefined",{"_index":1040,"title":{},"body":{"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["token",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PrismaAuthRepository.html":{},"classes/ResponseAuthDto.html":{},"index.html":{}}}],["toprisma",{"_index":613,"title":{},"body":{"classes/PrismaAccountMapper.html":{},"classes/PrismaPaymentMapper.html":{},"classes/PrismaUserMapper.html":{}}}],["toprisma(account",{"_index":617,"title":{},"body":{"classes/PrismaAccountMapper.html":{}}}],["toprisma(payment",{"_index":677,"title":{},"body":{"classes/PrismaPaymentMapper.html":{}}}],["toprisma(user",{"_index":710,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["touch",{"_index":928,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":960,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":963,"title":{},"body":{"index.html":{}}}],["transform",{"_index":411,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["transformer",{"_index":412,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["true",{"_index":495,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/CreateAccountController.html":{},"classes/CreateAccountDto.html":{},"injectables/CreateAccountUseCase.html":{},"controllers/CreatePaymentController.html":{},"classes/CreatePaymentDto.html":{},"injectables/CreatePaymentUseCase.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"classes/ErrorFilter.html":{},"controllers/GetAccountByIdController.html":{},"classes/GetAccountByIdDto.html":{},"injectables/GetAccountByIdUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IAccount.html":{},"interfaces/IPayment.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/Payment.html":{},"classes/PaymentRepository.html":{},"classes/PrismaAccountMapper.html":{},"injectables/PrismaAccountRepository.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaPaymentMapper.html":{},"injectables/PrismaPaymentRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAccountDto.html":{},"classes/ResponseAuthDto.html":{},"classes/ResponsePaymentDto.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["type(type",{"_index":73,"title":{},"body":{"classes/Account.html":{}}}],["typealiases",{"_index":1035,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["unauthorizedexception",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"injectables/PrismaAuthRepository.html":{}}}],["unauthorizedexception('invalid",{"_index":671,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["undefined})@apibody({type",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{}}}],["undefined})@apiquery({name",{"_index":493,"title":{},"body":{"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["undefined})@apiresponse({status",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["unknown",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/CreateUserController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1031,"title":{},"body":{"properties.html":{}}}],["up",{"_index":924,"title":{},"body":{"index.html":{}}}],["update",{"_index":114,"title":{},"body":{"classes/AccountRepository.html":{},"injectables/PrismaAccountRepository.html":{}}}],["update(account",{"_index":122,"title":{},"body":{"classes/AccountRepository.html":{},"injectables/PrismaAccountRepository.html":{}}}],["updatedat",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"interfaces/IUser.html":{},"classes/PrismaUserMapper.html":{},"classes/ResponseUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["use",{"_index":399,"title":{},"body":{"controllers/CreateUserController.html":{},"injectables/CreateUserUseCase.html":{}}}],["usecase/createaccountusecase/createaccountusecase",{"_index":280,"title":{},"body":{"controllers/CreateAccountController.html":{}}}],["usecase/createpaymentusecase/createpaymentusecase",{"_index":341,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["usecase/createuserusecase/createuserusecase",{"_index":393,"title":{},"body":{"controllers/CreateUserController.html":{}}}],["usecase/getaccountbyidusecase/getaccountbyidusecase",{"_index":501,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["usecase/getuserbyemailusecase/getuserbyemailusecase",{"_index":534,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["useguards",{"_index":279,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["useguards(authguard",{"_index":285,"title":{},"body":{"controllers/CreateAccountController.html":{},"controllers/CreatePaymentController.html":{},"controllers/GetAccountByIdController.html":{},"controllers/GetUserByEmailController.html":{}}}],["useguards(authguard)@get()@apibearerauth()@apioperation({summary",{"_index":489,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["useguards(authguard)@get()@apiquery({name",{"_index":529,"title":{},"body":{"controllers/GetUserByEmailController.html":{}}}],["useguards(authguard)@post()@apibearerauth()@apioperation({summary",{"_index":272,"title":{},"body":{"controllers/CreateAccountController.html":{}}}],["useguards(authguard)@post()@apibody({type",{"_index":335,"title":{},"body":{"controllers/CreatePaymentController.html":{}}}],["user",{"_index":153,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/CreateUserController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUserUseCase.html":{},"controllers/GetUserByEmailController.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/LoginAuthDto.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{},"classes/ResponseAuthDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["user'})@apiresponse({status",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CreateUserController.html":{}}}],["user.createdat",{"_index":445,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/PrismaUserMapper.html":{}}}],["user.email",{"_index":444,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaUserMapper.html":{}}}],["user.id",{"_index":442,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaAuthRepository.html":{},"classes/PrismaUserMapper.html":{}}}],["user.name",{"_index":443,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"classes/PrismaUserMapper.html":{}}}],["user.password",{"_index":712,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["user.updatedat",{"_index":542,"title":{},"body":{"injectables/GetUserByEmailUseCase.html":{}}}],["user?john.doe@example.com",{"_index":999,"title":{},"body":{"index.html":{}}}],["useralreadyexist",{"_index":438,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["userid",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usermodule",{"_index":131,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userraw",{"_index":708,"title":{},"body":{"classes/PrismaUserMapper.html":{},"injectables/PrismaUserRepository.html":{}}}],["userraw.createdat",{"_index":716,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.email",{"_index":714,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.id",{"_index":718,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.name",{"_index":713,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.password",{"_index":715,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userraw.updatedat",{"_index":717,"title":{},"body":{"classes/PrismaUserMapper.html":{}}}],["userrepository",{"_index":420,"title":{"classes/UserRepository.html":{}},"body":{"injectables/CreateUserUseCase.html":{},"injectables/GetUserByEmailUseCase.html":{},"injectables/PrismaUserRepository.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["userwithoutpassword",{"_index":669,"title":{},"body":{"injectables/PrismaAuthRepository.html":{}}}],["using",{"_index":921,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":869,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utils/replace",{"_index":776,"title":{},"body":{"classes/User.html":{}}}],["v2",{"_index":919,"title":{},"body":{"index.html":{}}}],["v2.git",{"_index":915,"title":{},"body":{"index.html":{}}}],["validate",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":314,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserDto.html":{},"classes/GetAccountByIdDto.html":{},"classes/LoginAuthDto.html":{},"dependencies.html":{}}}],["value",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["value.tolowercase",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["variables",{"_index":926,"title":{},"body":{"index.html":{}}}],["version",{"_index":1024,"title":{},"body":{"properties.html":{}}}],["viewmodelaccount",{"_index":502,"title":{"classes/viewModelAccount.html":{}},"body":{"controllers/GetAccountByIdController.html":{},"coverage.html":{},"classes/viewModelAccount.html":{}}}],["viewmodelaccount.tohttp(account",{"_index":510,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["viewmodelpayment",{"_index":805,"title":{"classes/viewModelPayment.html":{}},"body":{"coverage.html":{},"classes/viewModelAccount.html":{},"classes/viewModelPayment.html":{}}}],["viewmodelpayment.tohttp(payment",{"_index":1044,"title":{},"body":{"classes/viewModelAccount.html":{}}}],["viewmodels/account.viewmodel",{"_index":503,"title":{},"body":{"controllers/GetAccountByIdController.html":{}}}],["visit",{"_index":954,"title":{},"body":{"index.html":{}}}],["void",{"_index":40,"title":{},"body":{"classes/Account.html":{},"classes/ErrorFilter.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["walter",{"_index":1033,"title":{},"body":{"properties.html":{}}}],["yarn",{"_index":923,"title":{},"body":{"index.html":{}}}],["yes",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/AccountRepository.html":{},"classes/Payment.html":{},"classes/User.html":{}}}],["zoom",{"_index":93,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/PaymentModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Account.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                payments\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    balance\n                                \n                                \n                                    createdAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/Account.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/Account.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment[]\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/Account.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAccount\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/Account.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:28\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:32\n                                \n                            \n\n                \n                    \n                        settype(type: AccountType)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            type\n                                                    \n                                                            \n                                                                            AccountType\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        balance\n                    \n                \n\n                \n                    \n                        getbalance()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:36\n                                \n                            \n\n                \n                    \n                        setbalance(balance: number)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            balance\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Account.ts:40\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Replace } from 'src/utils/replace';\nimport { IAccount } from '../interfaces/IAccount';\nimport { randomUUID } from 'crypto';\nimport { AccountType } from '@prisma/client';\nimport { Payment } from './Payment';\n\nexport class Account {\n  private props: IAccount;\n  private _id: string;\n  payments: Payment[];\n\n  constructor(\n    props: Replace,\n    id?: string,\n  ) {\n    this.props = {\n      ...props,\n      createdAt: props.createdAt || new Date(),\n      payments: props.payments || [],\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get type() {\n    return this.props.type;\n  }\n\n  get balance() {\n    return this.props.balance;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set type(type: AccountType) {\n    this.props.type = type;\n  }\n\n  set balance(balance: number) {\n    this.props.balance = balance;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nCreateAccountUseCase \n\nCreateAccountUseCase \n\n\n\nGetAccountByIdUseCase \n\nGetAccountByIdUseCase \n\n\n\nAccountModule\n\nAccountModule\n\nCreateAccountUseCase  -->\n\nAccountModule->CreateAccountUseCase \n\n\n\nGetAccountByIdUseCase  -->\n\nAccountModule->GetAccountByIdUseCase \n\n\n\n\n\nCreateAccountUseCase\n\nCreateAccountUseCase\n\nAccountModule -->\n\nCreateAccountUseCase->AccountModule\n\n\n\n\n\nGetAccountByIdUseCase\n\nGetAccountByIdUseCase\n\nAccountModule -->\n\nGetAccountByIdUseCase->AccountModule\n\n\n\n\n\nPrismaAccountRepository\n\nPrismaAccountRepository\n\nAccountModule -->\n\nPrismaAccountRepository->AccountModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAccountModule -->\n\nPrismaService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateAccountUseCase\n                        \n                        \n                            GetAccountByIdUseCase\n                        \n                        \n                            PrismaAccountRepository\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateAccountController\n                        \n                        \n                            GetAccountByIdController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CreateAccountUseCase\n                        \n                        \n                            GetAccountByIdUseCase\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateAccountController } from '../application/account/controller/CreateAccountController/CreateAccountController';\nimport { GetAccountByIdController } from '../application/account/controller/GetAccountByIdController/GetAccountByIdController';\nimport { CreateAccountUseCase } from '../application/account/usecase/CreateAccountUseCase/CreateAccountUseCase';\nimport { GetAccountByIdUseCase } from '../application/account/usecase/GetAccountByIdUseCase/GetAccountByIdUseCase';\nimport { PrismaAccountRepository } from '../infrastructure/database/prisma/repository/prisma.account.repository';\nimport { PrismaService } from '../infrastructure/database/prisma/prisma.service';\n\n@Module({\n  imports: [],\n  controllers: [CreateAccountController, GetAccountByIdController],\n  providers: [\n    CreateAccountUseCase,\n    GetAccountByIdUseCase,\n    PrismaAccountRepository,\n    PrismaService,\n  ],\n  exports: [CreateAccountUseCase, GetAccountByIdUseCase],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountRepository.html":{"url":"classes/AccountRepository.html","title":"class - AccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/repositories/account.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(account: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/account.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string, startDate?: Date, endDate?: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/account.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(account: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/account.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from '../entities/Account';\n\nexport abstract class AccountRepository {\n  abstract create(account: Account): Promise;\n  abstract findById(\n    id: string,\n    startDate?: Date,\n    endDate?: Date,\n  ): Promise;\n  abstract update(account: Account): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountModule\n\nAccountModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  Module\n} from '@nestjs/common';\nimport { DatabaseModule } from './module/database.module';\nimport { UserModule } from './module/user.module';\nimport { AccountModule } from './module/account.module';\nimport { PaymentModule } from './module/payment.module';\nimport { AuthModule } from './module/auth.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    UserModule,\n    AccountModule,\n    PaymentModule,\n    AuthModule,\n    \n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Authenticate a user'})@ApiResponse({status: 200, description: 'User authenticated.', schema: undefined})@ApiResponse({status: 400, description: 'Bad Request.', schema: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', schema: undefined})@ApiResponse({status: 500, description: 'Internal Server Error.', schema: undefined})@ApiBody({type: LoginAuthDto})\n                \n            \n\n                    \n                        \n                            Defined in src/application/auth/controller/auth.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from '../service/auth.service';\nimport { LoginAuthDto } from '../../../domain/dtos/LoginAuthDto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Authenticate a user' })\n  @ApiResponse({\n    status: 200,\n    description: 'User authenticated.',\n    schema: {\n      example: {\n        user: {\n          id: 'df618536-a348-47c3-8438-fb40e7a1c51b',\n          name: 'John Doe',\n          email: 'john.doe@example.com',\n          createdAt: '2024-06-30T22:00:32.828Z',\n          updatedAt: '2024-06-30T22:00:32.976Z',\n        },\n        token:\n          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZjYxODUzNi1hMzQ4LTQ3YzMtODQzOC1mYjQwZTdhMWM1MWIiLCJlbWFpbCI6ImpvaG4uZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNzE5Nzg4MTU2LCJleHAiOjE3MTk3OTE3NTZ9.lLtLNTb7x3IiK6fIgLWJtE1zccYklbUrApv8U0mxnGw',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad Request.',\n    schema: {\n      example: {\n        message: 'Bad Request',\n        error: 'BadRequestException',\n        statusCode: 400,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /auth',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n    schema: {\n      example: {\n        message: 'Unauthorized',\n        error: 'UnauthorizedException',\n        statusCode: 401,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /auth',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal Server Error.',\n    schema: {\n      example: {\n        message: 'Internal Server Error',\n        error: 'InternalServerErrorException',\n        statusCode: 500,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /auth',\n      },\n    },\n  })\n  @ApiBody({ type: LoginAuthDto })\n  async login(@Body() loginAuthDto: LoginAuthDto) {\n    return this.authService.login(loginAuthDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            NestAuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard as NestAuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AuthGuard extends NestAuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info: Error) {\n    info;\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthGuard\n\nAuthGuard\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaAuthRepository\n\nPrismaAuthRepository\n\nAuthModule -->\n\nPrismaAuthRepository->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthGuard\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            PrismaAuthRepository\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from '../application/auth/service/auth.service';\nimport { AuthController } from '../application/auth/controller/auth.controller';\nimport { PrismaAuthRepository } from '../infrastructure/database/prisma/repository/prisma.auth.repository';\nimport { PrismaService } from '../infrastructure/database/prisma/prisma.service';\nimport { JwtStrategy } from '../strategies/jwt.strategy';\nimport { AuthGuard } from '../guards/auth.guard';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '60m' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    PrismaAuthRepository,\n    PrismaService,\n    JwtStrategy,\n    AuthGuard,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRepository.html":{"url":"classes/AuthRepository.html","title":"class - AuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/repositories/auth.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/auth.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResponseAuthDto } from '../dtos/ResponseAuthDto';\n\nexport abstract class AuthRepository {\n  abstract login(email: string, password: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/auth/service/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/auth/service/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/auth/service/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { AuthRepository } from '../../../domain/repositories/auth.repository';\nimport { LoginAuthDto } from '../../../domain/dtos/LoginAuthDto';\nimport { ResponseAuthDto } from '../../../domain/dtos/ResponseAuthDto';\nimport { PrismaAuthRepository } from '../../../infrastructure/database/prisma/repository/prisma.auth.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(PrismaAuthRepository) private authRepository: AuthRepository,\n  ) {}\n\n  async login(loginAuthDto: LoginAuthDto): Promise {\n    return this.authRepository.login(loginAuthDto.email, loginAuthDto.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateAccountController.html":{"url":"controllers/CreateAccountController.html","title":"controller - CreateAccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateAccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/account/controller/CreateAccountController/CreateAccountController.ts\n        \n\n            \n                Prefix\n            \n            \n                account\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(createAccountDto: CreateAccountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()@ApiBearerAuth()@ApiOperation({summary: 'Create a new bank account'})@ApiResponse({status: 201, description: 'Account successfully created.', schema: undefined})@ApiResponse({status: 400, description: 'Bad Request.', schema: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', schema: undefined})@ApiResponse({status: 500, description: 'Internal Server Error.', schema: undefined})@ApiBody({type: CreateAccountDto})\n                \n            \n\n                    \n                        \n                            Defined in src/application/account/controller/CreateAccountController/CreateAccountController.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAccountDto\n                                            \n                                                            CreateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { CreateAccountUseCase } from '../../usecase/CreateAccountUseCase/CreateAccountUseCase';\nimport { CreateAccountDto } from '../../../../domain/dtos/CreateAccountDto';\nimport { AuthGuard } from '../../../../guards/auth.guard';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBody,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\n\n@ApiTags('Account')\n@Controller('account')\nexport class CreateAccountController {\n  constructor(private readonly createAccountUseCase: CreateAccountUseCase) {}\n\n  @UseGuards(AuthGuard)\n  @Post()\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Create a new bank account' })\n  @ApiResponse({\n    status: 201,\n    description: 'Account successfully created.',\n    schema: {\n      example: {\n        id: '11cd6603-01d8-4d90-a800-3cc0a7df0851',\n        name: 'Account 01',\n        type: 'CURRENT',\n        balance: 1000,\n        createdAt: '2024-06-30T22:59:46.606Z',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad Request.',\n    schema: {\n      example: {\n        message: 'Invalid account type',\n        error: 'BadRequestException',\n        statusCode: 400,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /account',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n    schema: {\n      example: {\n        message: 'Unauthorized',\n        error: 'UnauthorizedException',\n        statusCode: 401,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /account',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal Server Error.',\n    schema: {\n      example: {\n        message: 'Internal Server Error',\n        error: 'InternalServerErrorException',\n        statusCode: 500,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /account',\n      },\n    },\n  })\n  @ApiBody({ type: CreateAccountDto })\n  async execute(@Body() createAccountDto: CreateAccountDto) {\n    const result = await this.createAccountUseCase.execute(createAccountDto);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/CreateAccountDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                balance\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPositive()@ApiProperty({example: 1000, description: 'The initial balance of the account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreateAccountDto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: 'Account 01', description: 'The name of the account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreateAccountDto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(AccountType)@ApiProperty({example: 'CURRENT', description: 'The type of the account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreateAccountDto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AccountType } from '@prisma/client';\nimport { IsEnum, IsNotEmpty, IsPositive, IsString } from 'class-validator';\n\nexport class CreateAccountDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: 'Account 01',\n    description: 'The name of the account',\n  })\n  name: string;\n\n  @IsNotEmpty()\n  @IsEnum(AccountType)\n  @ApiProperty({ example: 'CURRENT', description: 'The type of the account' })\n  type: AccountType;\n\n  @IsNotEmpty()\n  @IsPositive()\n  @ApiProperty({\n    example: 1000,\n    description: 'The initial balance of the account',\n  })\n  balance: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateAccountUseCase.html":{"url":"injectables/CreateAccountUseCase.html","title":"injectable - CreateAccountUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateAccountUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/account/usecase/CreateAccountUseCase/CreateAccountUseCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/account/usecase/CreateAccountUseCase/CreateAccountUseCase.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(accountDto: CreateAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/account/usecase/CreateAccountUseCase/CreateAccountUseCase.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountDto\n                                            \n                                                            CreateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { PrismaAccountRepository } from '../../../../infrastructure/database/prisma/repository/prisma.account.repository';\nimport { CreateAccountDto } from '../../../../domain/dtos/CreateAccountDto';\nimport { Account } from '../../../../domain/entities/Account';\nimport { AccountRepository } from '../../../../domain/repositories/account.repository';\nimport { ResponseAccountDto } from '../../../../domain/dtos/ResponseAccountDto';\nimport { PrismaAccountMapper } from '../../../../infrastructure/database/prisma/mappers/prisma.account.mapper';\n\n@Injectable()\nexport class CreateAccountUseCase {\n  constructor(\n    @Inject(PrismaAccountRepository)\n    private readonly accountRepository: AccountRepository,\n  ) {}\n\n  async execute(accountDto: CreateAccountDto): Promise {\n    const { name, type, balance } = accountDto;\n\n    const account = new Account({\n      name,\n      type,\n      balance,\n      createdAt: new Date(),\n    });\n\n    const result = await this.accountRepository.create(account);\n\n    return PrismaAccountMapper.toPrisma(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreatePaymentController.html":{"url":"controllers/CreatePaymentController.html","title":"controller - CreatePaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreatePaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/payment/controller/CreatePaymentController/CreatePaymentController.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(createPaymentDto: CreatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()@ApiBody({type: CreatePaymentDto})@ApiBearerAuth()@ApiOperation({summary: 'Create a new payment'})@ApiResponse({status: 201, description: 'Payment successfully created.', schema: undefined})@ApiResponse({status: 400, description: 'Bad Request.', schema: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', schema: undefined})@ApiResponse({status: 500, description: 'Internal Server Error.', schema: undefined})@ApiBody({type: CreatePaymentDto})\n                \n            \n\n                    \n                        \n                            Defined in src/application/payment/controller/CreatePaymentController/CreatePaymentController.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPaymentDto\n                                            \n                                                            CreatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Post, Body } from '@nestjs/common';\nimport { CreatePaymentDto } from '../../../../domain/dtos/CreatePaymentDto';\nimport { CreatePaymentUseCase } from '../../useCase/CreatePaymentUseCase/CreatePaymentUseCase';\nimport { AuthGuard } from '../../../../guards/auth.guard';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBody,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\n\n@ApiTags('Payment')\n@Controller('payment')\nexport class CreatePaymentController {\n  constructor(private readonly createPaymentUseCase: CreatePaymentUseCase) {}\n\n  @UseGuards(AuthGuard)\n  @Post()\n  @ApiBody({ type: CreatePaymentDto })\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Create a new payment' })\n  @ApiResponse({\n    status: 201,\n    description: 'Payment successfully created.',\n    schema: {\n      example: {\n        id: '48800cf4-1ce6-4324-8318-1f436dd23c41',\n        accountId: '11cd6603-01d8-4d90-a800-3cc0a7df0851',\n        amount: 214,\n        description: 'some description',\n        createdAt: '2024-06-30T23:02:28.428Z',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad Request.',\n    schema: {\n      example: {\n        message: 'Invalid payment amount',\n        error: 'BadRequestException',\n        statusCode: 400,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /payment',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n    schema: {\n      example: {\n        message: 'Unauthorized',\n        error: 'UnauthorizedException',\n        statusCode: 401,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /payment',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal Server Error.',\n    schema: {\n      example: {\n        message: 'Internal Server Error',\n        error: 'InternalServerErrorException',\n        statusCode: 500,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /payment',\n      },\n    },\n  })\n  @ApiBody({ type: CreatePaymentDto })\n  async execute(@Body() createPaymentDto: CreatePaymentDto) {\n    const result = await this.createPaymentUseCase.execute(createPaymentDto);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/CreatePaymentDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                accountId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        accountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: '12018f9b-4859-4e21-a0f1-45f990fa99c7', description: 'The ID of the account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreatePaymentDto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()@ApiProperty({example: 214, description: 'The amount of the payment'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreatePaymentDto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: 'some description', description: 'The description of the payment'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreatePaymentDto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsPositive, IsString } from 'class-validator';\n\nexport class CreatePaymentDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: '12018f9b-4859-4e21-a0f1-45f990fa99c7',\n    description: 'The ID of the account',\n  })\n  accountId: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({ example: 214, description: 'The amount of the payment' })\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: 'some description',\n    description: 'The description of the payment',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatePaymentUseCase.html":{"url":"injectables/CreatePaymentUseCase.html","title":"injectable - CreatePaymentUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreatePaymentUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/payment/useCase/CreatePaymentUseCase/CreatePaymentUseCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: PaymentRepository, accountRepository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/payment/useCase/CreatePaymentUseCase/CreatePaymentUseCase.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        PaymentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(paymentDto: CreatePaymentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/payment/useCase/CreatePaymentUseCase/CreatePaymentUseCase.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentDto\n                                            \n                                                            CreatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { PaymentRepository } from '../../../../domain/repositories/payment.repository';\nimport { PrismaPaymentRepository } from '../../../../infrastructure/database/prisma/repository/prisma.payment.respository';\nimport { PrismaAccountRepository } from '../../../../infrastructure/database/prisma/repository/prisma.account.repository';\nimport { CreatePaymentDto } from '../../../../domain/dtos/CreatePaymentDto';\nimport { ResponsePaymentDto } from '../../../../domain/dtos/ResponsePaymentDto';\nimport { Payment } from '../../../../domain/entities/Payment';\nimport { AccountRepository } from '../../../../domain/repositories/account.repository';\n\n@Injectable()\nexport class CreatePaymentUseCase {\n  constructor(\n    @Inject(PrismaPaymentRepository)\n    private readonly paymentRepository: PaymentRepository,\n    @Inject(PrismaAccountRepository)\n    private readonly accountRepository: AccountRepository,\n  ) {}\n\n  async execute(paymentDto: CreatePaymentDto): Promise {\n    const { accountId, amount, description } = paymentDto;\n\n    // Check if the account exists\n    const account = await this.accountRepository.findById(accountId);\n    if (!account) {\n      throw new BadRequestException('Account not found');\n    }\n\n    const payment = new Payment({\n      accountId,\n      amount,\n      description,\n      createdAt: new Date(),\n    });\n\n    if (account.balance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateUserController.html":{"url":"controllers/CreateUserController.html","title":"controller - CreateUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/user/controller/CreateUserController/CreateUserController.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new user'})@ApiResponse({status: 201, description: 'User successfully created.', schema: undefined})@ApiResponse({status: 400, description: 'Bad Request.', schema: undefined})@ApiResponse({status: 409, description: 'Conflict.', schema: undefined})@ApiResponse({status: 500, description: 'Internal Server Error.', schema: undefined})@ApiBody({type: CreateUserDto})\n                \n            \n\n                    \n                        \n                            Defined in src/application/user/controller/CreateUserController/CreateUserController.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { CreateUserUseCase } from '../../usecase/CreateUserUseCase/CreateUserUseCase';\nimport { CreateUserDto } from '../../../../domain/dtos/CreateUserDto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('User')\n@Controller('user')\nexport class CreateUserController {\n  constructor(private readonly createUserUseCase: CreateUserUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new user' })\n  @ApiResponse({\n    status: 201,\n    description: 'User successfully created.',\n    schema: {\n      example: {\n        id: 'df618536-a348-47c3-8438-fb40e7a1c51b',\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        createdAt: '2024-06-30T22:00:32.828Z',\n        updatedAt: '2024-06-30T22:00:32.828Z',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad Request.',\n    schema: {\n      example: {\n        message: 'Invalid email format',\n        error: 'BadRequestException',\n        statusCode: 400,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /user',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 409,\n    description: 'Conflict.',\n    schema: {\n      example: {\n        message: 'email already in use',\n        error: 'ConflictException',\n        statusCode: 409,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /user',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal Server Error.',\n    schema: {\n      example: {\n        message: 'Internal Server Error',\n        error: 'InternalServerErrorException',\n        statusCode: 500,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'POST /user',\n      },\n    },\n  })\n  @ApiBody({ type: CreateUserDto })\n  async execute(@Body() createUserDto: CreateUserDto) {\n    const result = await this.createUserUseCase.execute(createUserDto);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/CreateUserDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Invalid email format'})@Transform( => )@ApiProperty({example: 'john.doe@example.com', description: 'The email of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreateUserDto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: 'John Doe', description: 'The name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreateUserDto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(8)@ApiProperty({example: 'SecurePassword123!', description: 'The password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/CreateUserDto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'John Doe', description: 'The name of the user' })\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Invalid email format' })\n  @Transform(({ value }) => value.toLowerCase())\n  @ApiProperty({\n    example: 'john.doe@example.com',\n    description: 'The email of the user',\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(8)\n  @ApiProperty({\n    example: 'SecurePassword123!',\n    description: 'The password of the user',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserUseCase.html":{"url":"injectables/CreateUserUseCase.html","title":"injectable - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/user/usecase/CreateUserUseCase/CreateUserUseCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/user/usecase/CreateUserUseCase/CreateUserUseCase.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(dto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/user/usecase/CreateUserUseCase/CreateUserUseCase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Inject, Injectable } from '@nestjs/common';\nimport { User } from '../../../../domain/entities/User';\nimport { UserRepository } from '../../../../domain/repositories/user.repository';\nimport { PrismaUserRepository } from '../../../../infrastructure/database/prisma/repository/prisma.user.repository';\nimport { CreateUserDto } from '../../../../domain/dtos/CreateUserDto';\nimport { hash } from 'bcrypt';\nimport { ResponseUserDto } from '../../../../domain/dtos/ResponseUserDto';\n\n@Injectable()\nexport class CreateUserUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(dto: CreateUserDto): Promise {\n    const user = new User({\n      name: dto.name,\n      email: dto.email,\n      password: await hash(dto.password, 10),\n    });\n\n    const userAlreadyExist = await this.userRepository.findByEmail(dto.email);\n\n    if (userAlreadyExist) {\n      throw new ConflictException('email already in use');\n    }\n\n    await this.userRepository.create(user);\n\n    const responseUserDto = new ResponseUserDto({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      createdAt: user.createdAt,\n      updatedAt: user.createdAt,\n    });\n\n    return responseUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_imports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nAccountModule\n\nAccountModule\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule -->\n\nAccountModule->DatabaseModule\n\n\n\n\n\nPrismaUserRepository \n\nPrismaUserRepository \n\nPrismaUserRepository  -->\n\nDatabaseModule->PrismaUserRepository \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\nPrismaUserRepository\n\nPrismaUserRepository\n\nDatabaseModule -->\n\nPrismaUserRepository->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            PrismaUserRepository\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaUserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from '../infrastructure/database/prisma/prisma.service';\nimport { PrismaUserRepository } from '../infrastructure/database/prisma/repository/prisma.user.repository';\nimport { AccountModule } from './account.module';\n\n@Module({\n  providers: [PrismaService, PrismaUserRepository],\n  exports: [PrismaUserRepository],\n  imports: [AccountModule],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorFilter.html":{"url":"classes/ErrorFilter.html","title":"class - ErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/error.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { isObject, isString } from 'lodash';\n\n@Catch(HttpException)\nexport class ErrorFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus ? exception.getStatus() : 500;\n\n    let message = exception.message || 'Internal Server Error';\n\n    if (exception instanceof HttpException) {\n      const errorResponse = (exception as any).response;\n\n      if (Array.isArray(errorResponse.message)) {\n        message = errorResponse.message[0];\n      } else if (isObject(errorResponse.message)) {\n        message = isString(errorResponse.message.message)\n          ? errorResponse.message.message\n          : message;\n      } else {\n        message = errorResponse.message || message;\n      }\n    }\n\n    response.status(status).json({\n      message,\n      error: exception.name,\n      statusCode: status,\n      timestamp: new Date(),\n      path: `${request.method} ${request.originalUrl}`,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GetAccountByIdController.html":{"url":"controllers/GetAccountByIdController.html","title":"controller - GetAccountByIdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GetAccountByIdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/account/controller/GetAccountByIdController/GetAccountByIdController.ts\n        \n\n            \n                Prefix\n            \n            \n                account\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, startDate: Date, endDate: Date)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()@ApiBearerAuth()@ApiOperation({summary: 'Find a bank account by ID'})@ApiResponse({status: 200, description: 'Account found.', schema: undefined})@ApiResponse({status: 404, description: 'Account not found.', schema: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', schema: undefined})@ApiResponse({status: 500, description: 'Internal server error.', schema: undefined})@ApiQuery({name: 'id', required: true, type: String})@ApiQuery({name: 'startDate', required: false, type: Date})@ApiQuery({name: 'endDate', required: false, type: Date})\n                \n            \n\n                    \n                        \n                            Defined in src/application/account/controller/GetAccountByIdController/GetAccountByIdController.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, UseGuards } from '@nestjs/common';\nimport { GetAccountByIdUseCase } from '../../usecase/GetAccountByIdUseCase/GetAccountByIdUseCase';\nimport { viewModelAccount } from '../../viewModels/account.viewModel';\nimport { AuthGuard } from '../../../../guards/auth.guard';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiQuery,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\n\n@ApiTags('Account')\n@Controller('account')\nexport class GetAccountByIdController {\n  constructor(private readonly getAccountByIdUseCase: GetAccountByIdUseCase) {}\n\n  @UseGuards(AuthGuard)\n  @Get()\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Find a bank account by ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'Account found.',\n    schema: {\n      example: {\n        id: '11cd6603-01d8-4d90-a800-3cc0a7df0851',\n        name: 'Account 01',\n        type: 'CURRENT',\n        balance: 1000,\n        createdAt: '2024-06-30T22:59:46.606Z',\n        payments: [],\n      },\n    },\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Account not found.',\n    schema: {\n      example: {\n        message: 'Account not found',\n        error: 'NotFoundException',\n        statusCode: 404,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /account',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n    schema: {\n      example: {\n        message: 'Unauthorized',\n        error: 'UnauthorizedException',\n        statusCode: 401,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /account',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n    schema: {\n      example: {\n        message: 'Internal server error',\n        error: 'InternalServerErrorException',\n        statusCode: 500,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /account',\n      },\n    },\n  })\n  @ApiQuery({ name: 'id', required: true, type: String })\n  @ApiQuery({ name: 'startDate', required: false, type: Date })\n  @ApiQuery({ name: 'endDate', required: false, type: Date })\n  async execute(\n    @Query('id') id: string,\n    @Query('startDate') startDate: Date,\n    @Query('endDate') endDate: Date,\n  ) {\n    const account = await this.getAccountByIdUseCase.execute(\n      id,\n      startDate,\n      endDate,\n    );\n    return viewModelAccount.toHttp(account);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAccountByIdDto.html":{"url":"classes/GetAccountByIdDto.html","title":"class - GetAccountByIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAccountByIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/GetAccountByIdDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/GetAccountByIdDto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/GetAccountByIdDto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/GetAccountByIdDto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsUUID, IsDateString } from 'class-validator';\n\nexport class GetAccountByIdDto {\n  @IsUUID()\n  @IsString()\n  id: string;\n\n  @IsOptional()\n  @IsDateString()\n  startDate?: Date;\n\n  @IsOptional()\n  @IsDateString()\n  endDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetAccountByIdUseCase.html":{"url":"injectables/GetAccountByIdUseCase.html","title":"injectable - GetAccountByIdUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetAccountByIdUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/account/usecase/GetAccountByIdUseCase/GetAccountByIdUseCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/account/usecase/GetAccountByIdUseCase/GetAccountByIdUseCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(id: string, startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/account/usecase/GetAccountByIdUseCase/GetAccountByIdUseCase.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { AccountRepository } from '../../../../domain/repositories/account.repository';\nimport { PrismaAccountRepository } from '../../../../infrastructure/database/prisma/repository/prisma.account.repository';\nimport { ResponseAccountDto } from '../../../../domain/dtos/ResponseAccountDto';\n\n@Injectable()\nexport class GetAccountByIdUseCase {\n  constructor(\n    @Inject(PrismaAccountRepository)\n    private accountRepository: AccountRepository,\n  ) {}\n\n  async execute(\n    id: string,\n    startDate: Date,\n    endDate: Date,\n  ): Promise {\n    const account = await this.accountRepository.findById(\n      id,\n      startDate,\n      endDate,\n    );\n\n    if (!account) {\n      throw new NotFoundException(`Account with id ${id} not found`);\n    }\n\n    return account;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GetUserByEmailController.html":{"url":"controllers/GetUserByEmailController.html","title":"controller - GetUserByEmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GetUserByEmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/user/controller/GetUserByEmailController/GetUserByEmailController.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()@ApiQuery({name: 'email', type: String})@ApiBearerAuth()@ApiOperation({summary: 'Find a user by email'})@ApiResponse({status: 200, description: 'User found.', schema: undefined})@ApiResponse({status: 400, description: 'Bad Request.', schema: undefined})@ApiResponse({status: 404, description: 'User not found.', schema: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', schema: undefined})@ApiResponse({status: 500, description: 'Internal server error.', schema: undefined})@ApiQuery({name: 'email', required: true, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/application/user/controller/GetUserByEmailController/GetUserByEmailController.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, UseGuards } from '@nestjs/common';\nimport { GetUserByEmailUseCase } from '../../usecase/GetUserByEmailUseCase/GetUserByEmailUseCase';\nimport { AuthGuard } from '../../../../guards/auth.guard';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiQuery,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\n\n@ApiTags('User')\n@Controller('user')\nexport class GetUserByEmailController {\n  constructor(private readonly getUserByEmailUseCase: GetUserByEmailUseCase) {}\n\n  @UseGuards(AuthGuard)\n  @Get()\n  @ApiQuery({ name: 'email', type: String })\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Find a user by email' })\n  @ApiResponse({\n    status: 200,\n    description: 'User found.',\n    schema: {\n      example: {\n        id: 'df618536-a348-47c3-8438-fb40e7a1c51b',\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        createdAt: '2024-06-30T22:00:32.828Z',\n        updatedAt: '2024-06-30T22:00:32.976Z',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Bad Request.',\n    schema: {\n      example: {\n        message: 'Invalid email',\n        error: 'BadRequestException',\n        statusCode: 400,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /user',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'User not found.',\n    schema: {\n      example: {\n        message: 'User not found',\n        error: 'NotFoundException',\n        statusCode: 404,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /user',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized.',\n    schema: {\n      example: {\n        message: 'Unauthorized',\n        error: 'UnauthorizedException',\n        statusCode: 401,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /user',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 500,\n    description: 'Internal server error.',\n    schema: {\n      example: {\n        message: 'Internal server error',\n        error: 'InternalServerErrorException',\n        statusCode: 500,\n        timestamp: '2024-07-01T06:30:12.114Z',\n        path: 'GET /user',\n      },\n    },\n  })\n  @ApiQuery({ name: 'email', required: true, type: String })\n  async execute(@Query('email') email: string) {\n    const user = await this.getUserByEmailUseCase.execute(email);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetUserByEmailUseCase.html":{"url":"injectables/GetUserByEmailUseCase.html","title":"injectable - GetUserByEmailUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetUserByEmailUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/user/usecase/GetUserByEmailUseCase/GetUserByEmailUseCase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/user/usecase/GetUserByEmailUseCase/GetUserByEmailUseCase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/user/usecase/GetUserByEmailUseCase/GetUserByEmailUseCase.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { ResponseUserDto } from '../../../../domain/dtos/ResponseUserDto';\nimport { UserRepository } from '../../../../domain/repositories/user.repository';\nimport { PrismaUserRepository } from '../../../../infrastructure/database/prisma/repository/prisma.user.repository';\n\n@Injectable()\nexport class GetUserByEmailUseCase {\n  constructor(\n    @Inject(PrismaUserRepository) private userRepository: UserRepository,\n  ) {}\n\n  async execute(email: string): Promise {\n    const user = await this.userRepository.findByEmail(email);\n\n    if (!user) {\n      throw new NotFoundException(`User with email ${email} not found`);\n    }\n\n    const responseUserDto = new ResponseUserDto({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt,\n    });\n\n    return responseUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccount.html":{"url":"interfaces/IAccount.html","title":"interface - IAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/IAccount.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payments\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         AccountType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountType } from '@prisma/client';\nimport { Payment } from '../entities/Payment';\n\nexport interface IAccount {\n  id?: string;\n  name: string;\n  type: AccountType;\n  balance: number;\n  createdAt: Date;\n  payments?: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPayment.html":{"url":"interfaces/IPayment.html","title":"interface - IPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/IPayment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPayment {\n  id?: string;\n  accountId: string;\n  amount: number;\n  description: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/IUser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/strategies/jwt.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAuthDto.html":{"url":"classes/LoginAuthDto.html","title":"class - LoginAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/LoginAuthDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@ApiProperty({example: 'john.doe@example.com', description: 'The email of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/LoginAuthDto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty({example: 'SecurePassword123!', description: 'The password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/LoginAuthDto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class LoginAuthDto {\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    example: 'john.doe@example.com',\n    description: 'The email of the user',\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'SecurePassword123!',\n    description: 'The password of the user',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payment.html":{"url":"classes/Payment.html","title":"class - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Payment.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    accountId\n                                \n                                \n                                    amount\n                                \n                                \n                                    description\n                                \n                                \n                                    createdAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/Payment.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/Payment.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPayment\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/Payment.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accountId\n                    \n                \n\n                \n                    \n                        getaccountId()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:17\n                                \n                            \n\n                \n                    \n                        setaccountId(accountId: string)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            accountId\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        amount\n                    \n                \n\n                \n                    \n                        getamount()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:21\n                                \n                            \n\n                \n                    \n                        setamount(amount: number)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            amount\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:25\n                                \n                            \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/Payment.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Replace } from 'src/utils/replace';\nimport { IPayment } from '../interfaces/IPayment';\nimport { randomUUID } from 'crypto';\n\nexport class Payment {\n  private props: IPayment;\n  private _id: string;\n  constructor(props: Replace, id?: string) {\n    this.props = { ...props, createdAt: props.createdAt || new Date() };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get accountId() {\n    return this.props.accountId;\n  }\n\n  get amount() {\n    return this.props.amount;\n  }\n\n  get description() {\n    return this.props.description;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  set accountId(accountId: string) {\n    this.props.accountId = accountId;\n  }\n\n  set amount(amount: number) {\n    this.props.amount = amount;\n  }\n\n  set description(description: string) {\n    this.props.description = description;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nDatabaseModule->PaymentModule\n\n\n\n\n\nCreatePaymentUseCase\n\nCreatePaymentUseCase\n\nPaymentModule -->\n\nCreatePaymentUseCase->PaymentModule\n\n\n\n\n\nPrismaAccountRepository\n\nPrismaAccountRepository\n\nPaymentModule -->\n\nPrismaAccountRepository->PaymentModule\n\n\n\n\n\nPrismaPaymentRepository\n\nPrismaPaymentRepository\n\nPaymentModule -->\n\nPrismaPaymentRepository->PaymentModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPaymentModule -->\n\nPrismaService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreatePaymentUseCase\n                        \n                        \n                            PrismaAccountRepository\n                        \n                        \n                            PrismaPaymentRepository\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreatePaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from './database.module';\nimport { PrismaService } from '../infrastructure/database/prisma/prisma.service';\nimport { PrismaPaymentRepository } from '../infrastructure/database/prisma/repository/prisma.payment.respository';\nimport { CreatePaymentUseCase } from '../application/payment/useCase/CreatePaymentUseCase/CreatePaymentUseCase';\nimport { CreatePaymentController } from '../application/payment/controller/CreatePaymentController/CreatePaymentController';\nimport { PrismaAccountRepository } from '../infrastructure/database/prisma/repository/prisma.account.repository';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CreatePaymentController],\n  providers: [\n    PrismaService,\n    PrismaPaymentRepository,\n    PrismaAccountRepository,\n    CreatePaymentUseCase,\n  ],\n  exports: [],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentRepository.html":{"url":"classes/PaymentRepository.html","title":"class - PaymentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/repositories/payment.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(account: Payment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/payment.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Payment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/payment.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Payment } from '../entities/Payment';\n\nexport abstract class PaymentRepository {\n  abstract create(account: Payment): Promise;\n  abstract findById(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaAccountMapper.html":{"url":"classes/PrismaAccountMapper.html","title":"class - PrismaAccountMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaAccountMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(accountRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountRaw\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Account\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(account: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AccountRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from '../../../../domain/entities/Account';\nimport { Account as AccountRaw, Payment as PaymentRaw } from '@prisma/client';\nimport { PrismaPaymentMapper } from './prisma.payment.mapper';\n\nexport class PrismaAccountMapper {\n  static toPrisma(account: Account): AccountRaw {\n    return {\n      id: account.id,\n      name: account.name,\n      type: account.type,\n      balance: account.balance,\n      createdAt: account.createdAt,\n    };\n  }\n\n  static toDomain(\n    accountRaw: AccountRaw & { payments: PaymentRaw[] },\n  ): Account {\n    const account = new Account(\n      {\n        name: accountRaw.name,\n        type: accountRaw.type,\n        balance: accountRaw.balance,\n        createdAt: accountRaw.createdAt,\n      },\n      accountRaw.id,\n    );\n\n    const payments = accountRaw.payments.map(PrismaPaymentMapper.toDomain);\n    account.payments = payments;\n    return account;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaAccountRepository.html":{"url":"injectables/PrismaAccountRepository.html","title":"injectable - PrismaAccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaAccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/repository/prisma.account.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AccountRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/prisma/repository/prisma.account.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(account: Account)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AccountRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AccountRepository:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string, startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AccountRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AccountRepository:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(account: Account)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AccountRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AccountRepository:51\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AccountRepository } from '../../../../domain/repositories/account.repository';\nimport { PrismaService } from '../prisma.service';\nimport { Account } from '../../../../domain/entities/Account';\nimport { PrismaAccountMapper } from '../mappers/prisma.account.mapper';\nimport { PrismaPaymentMapper } from '../mappers/prisma.payment.mapper';\n\n@Injectable()\nexport class PrismaAccountRepository extends AccountRepository {\n  constructor(private prisma: PrismaService) {\n    super();\n  }\n\n  async create(account: Account): Promise {\n    const accountRaw = PrismaAccountMapper.toPrisma(account);\n    const result = await this.prisma.account.create({\n      data: accountRaw,\n    });\n\n    return result;\n  }\n\n  // prisma.account.repository.ts\n\n  async findById(id: string, startDate: Date, endDate: Date): Promise {\n    const accountRaw = await this.prisma.account.findUnique({\n      where: { id },\n      include: {\n        payments: {\n          where: {\n            createdAt: {\n              gte: startDate,\n              lte: endDate,\n            },\n          },\n        },\n      },\n    });\n\n    if (!accountRaw) return null; // Early return if accountRaw is null\n\n    // Ensure payments is an array, even if it's empty\n    const payments = accountRaw.payments\n      ? accountRaw.payments.map(PrismaPaymentMapper.toDomain)\n      : [];\n    const account = PrismaAccountMapper.toDomain(accountRaw);\n    account.payments = payments;\n    return account;\n  }\n\n  async update(account: Account): Promise {\n    const accountRaw = PrismaAccountMapper.toPrisma(account);\n    await this.prisma.account.update({\n      where: { id: accountRaw.id },\n      data: accountRaw,\n    });\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaAuthRepository.html":{"url":"injectables/PrismaAuthRepository.html","title":"injectable - PrismaAuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaAuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/repository/prisma.auth.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/prisma/repository/prisma.auth.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthRepository:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ResponseAuthDto } from '../../../../domain/dtos/ResponseAuthDto';\nimport { PrismaService } from '../prisma.service';\nimport { AuthRepository } from 'src/domain/repositories/auth.repository';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n@Injectable()\nexport class PrismaAuthRepository extends AuthRepository {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {\n    super();\n  }\n\n  async login(email: string, pass: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { email },\n    });\n    const { password, ...userWithoutPassword } = user;\n\n    if (!user || !(await bcrypt.compare(pass, password))) {\n      throw new UnauthorizedException('Invalid email or password');\n    }\n\n    const payload = { sub: user.id, email: user.email };\n    const token = this.jwtService.sign(payload);\n\n    return {\n      user: userWithoutPassword,\n      token,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaPaymentMapper.html":{"url":"classes/PrismaPaymentMapper.html","title":"class - PrismaPaymentMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaPaymentMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(paymentRaw: PaymentRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentRaw\n                                            \n                                                            PaymentRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Payment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(payment: Payment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payment\n                                            \n                                                            Payment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PaymentRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Payment } from '../../../../domain/entities/Payment';\nimport { Payment as PaymentRaw } from '@prisma/client';\nexport class PrismaPaymentMapper {\n  static toPrisma(payment: Payment): PaymentRaw {\n    return {\n      id: payment.id,\n      accountId: payment.accountId,\n      amount: payment.amount,\n      description: payment.description,\n      createdAt: payment.createdAt,\n    };\n  }\n\n  static toDomain(paymentRaw: PaymentRaw): Payment {\n    return new Payment(\n      {\n        accountId: paymentRaw.accountId,\n        amount: paymentRaw.amount,\n        description: paymentRaw.description,\n        createdAt: paymentRaw.createdAt,\n      },\n      paymentRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaPaymentRepository.html":{"url":"injectables/PrismaPaymentRepository.html","title":"injectable - PrismaPaymentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaPaymentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/repository/prisma.payment.respository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaymentRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/prisma/repository/prisma.payment.respository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payment: Payment)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaymentRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PaymentRepository:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payment\n                                            \n                                                            Payment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PaymentRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PaymentRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma.service';\nimport { Payment } from '../../../../domain/entities/Payment';\nimport { PrismaPaymentMapper } from '../mappers/prisma.payment.mapper';\nimport { PaymentRepository } from '../../../../domain/repositories/payment.repository';\n\n@Injectable()\nexport class PrismaPaymentRepository extends PaymentRepository {\n  constructor(private prisma: PrismaService) {\n    super();\n  }\n\n  async create(payment: Payment): Promise {\n    const paymentRaw = PrismaPaymentMapper.toPrisma(payment);\n    const createdPayment = await this.prisma.payment.create({\n      data: paymentRaw,\n    });\n    return PrismaPaymentMapper.toDomain(createdPayment);\n  }\n\n  async findById(id: string): Promise {\n    const paymentRaw = await this.prisma.payment.findUnique({\n      where: { id },\n    });\n    if (!paymentRaw) return null;\n    return PrismaPaymentMapper.toDomain(paymentRaw);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaUserMapper.html":{"url":"classes/PrismaUserMapper.html","title":"class - PrismaUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(userRaw: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userRaw\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../../domain/entities/User';\nimport { User as UserRaw } from '@prisma/client';\n\nexport class PrismaUserMapper {\n  static toPrisma(user: User): UserRaw {\n    return {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      createdAt: user.createdAt,\n      updatedAt: new Date(),\n    };\n  }\n\n  static toDomain(userRaw: UserRaw): User {\n    return new User(\n      {\n        name: userRaw.name,\n        email: userRaw.email,\n        password: userRaw.password,\n        createdAt: userRaw.createdAt,\n        updatedAt: userRaw.updatedAt,\n      },\n      userRaw.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaUserRepository.html":{"url":"injectables/PrismaUserRepository.html","title":"injectable - PrismaUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma/repository/prisma.user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/database/prisma/repository/prisma.user.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/repository/prisma.user.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/repository/prisma.user.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma/repository/prisma.user.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserRepository } from '../../../../domain/repositories/user.repository';\nimport { User } from '../../../../domain/entities/User';\nimport { PrismaService } from '../prisma.service';\nimport { PrismaUserMapper } from '../mappers/prisma.user.mapper';\n\n@Injectable()\nexport class PrismaUserRepository implements UserRepository {\n  constructor(private prisma: PrismaService) {}\n\n  async create(user: User): Promise {\n    const userRaw = PrismaUserMapper.toPrisma(user);\n\n    await this.prisma.user.create({\n      data: userRaw,\n    });\n  }\n\n  async findByEmail(email: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email,\n      },\n    });\n\n    if (!user) return null;\n\n    return PrismaUserMapper.toDomain(user);\n  }\n\n  async delete(id: string): Promise {\n    await this.prisma.user.delete({\n      where: {\n        id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseAccountDto.html":{"url":"classes/ResponseAccountDto.html","title":"class - ResponseAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/ResponseAccountDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                payments\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        payments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResponsePaymentDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAccountDto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ResponsePaymentDto } from './ResponsePaymentDto';\n\nexport class ResponseAccountDto {\n  id: string;\n  name: string;\n  type: string;\n  balance: number;\n  createdAt: Date;\n  payments?: ResponsePaymentDto[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseAuthDto.html":{"url":"classes/ResponseAuthDto.html","title":"class - ResponseAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/ResponseAuthDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAuthDto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseAuthDto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ResponseUserDto } from './ResponseUserDto';\n\nexport class ResponseAuthDto {\n  user: ResponseUserDto;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponsePaymentDto.html":{"url":"classes/ResponsePaymentDto.html","title":"class - ResponsePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponsePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/ResponsePaymentDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountId\n                            \n                            \n                                amount\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/domain/dtos/ResponsePaymentDto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponsePaymentDto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponsePaymentDto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponsePaymentDto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponsePaymentDto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponsePaymentDto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResponsePaymentDto {\n  id: string;\n  accountId: string;\n  amount: number;\n  description: string;\n  createdAt: Date;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseUserDto.html":{"url":"classes/ResponseUserDto.html","title":"class - ResponseUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dtos/ResponseUserDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/domain/dtos/ResponseUserDto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseUserDto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseUserDto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseUserDto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseUserDto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/dtos/ResponseUserDto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResponseUserDto {\n  id: string;\n  name: string;\n  email: string;\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/User.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Replace, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/User.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Replace\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/User.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/User.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:21\n                                \n                            \n\n                \n                    \n                        setname(name: string)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:25\n                                \n                            \n\n                \n                    \n                        setemail(email: string)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            email\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:29\n                                \n                            \n\n                \n                    \n                        setpassword(password: string)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            password\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entities/User.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Replace } from '../../utils/replace';\nimport { IUser } from '../interfaces/IUser';\nimport { randomUUID } from 'crypto';\n\nexport class User {\n  private props: IUser;\n  private _id: string;\n\n  constructor(props: Replace, id?: string) {\n    this.props = {\n      ...props,\n      createdAt: props.createdAt || new Date(),\n    };\n    this._id = id || randomUUID();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this.props.name;\n  }\n\n  get email() {\n    return this.props.email;\n  }\n\n  get password() {\n    return this.props.password;\n  }\n\n  get createdAt() {\n    return this.props.createdAt;\n  }\n\n  get updatedAt() {\n    return this.props.updatedAt;\n  }\n\n  set name(name: string) {\n    this.props.name = name;\n  }\n\n  set email(email: string) {\n    this.props.email = email;\n  }\n\n  set password(password: string) {\n    this.props.password = password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nUserModule -->\n\nCreateUserUseCase->UserModule\n\n\n\n\n\nGetUserByEmailUseCase\n\nGetUserByEmailUseCase\n\nUserModule -->\n\nGetUserByEmailUseCase->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserUseCase\n                        \n                        \n                            GetUserByEmailUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreateUserController\n                        \n                        \n                            GetUserByEmailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateUserController } from 'src/application/user/controller/CreateUserController/CreateUserController';\nimport { CreateUserUseCase } from 'src/application/user/usecase/CreateUserUseCase/CreateUserUseCase';\nimport { DatabaseModule } from './database.module';\nimport { GetUserByEmailController } from 'src/application/user/controller/GetUserByEmailController/GetUserByEmailController';\nimport { GetUserByEmailUseCase } from 'src/application/user/usecase/GetUserByEmailUseCase/GetUserByEmailUseCase';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CreateUserController, GetUserByEmailController],\n  providers: [CreateUserUseCase, GetUserByEmailUseCase],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/repositories/user.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                findByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/user.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/user.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/repositories/user.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../entities/User';\n\nexport abstract class UserRepository {\n  abstract create(user: User): Promise;\n  abstract findByEmail(email: string): Promise;\n  abstract delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/account/controller/CreateAccountController/CreateAccountController.ts\n            \n            controller\n            CreateAccountController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/account/controller/GetAccountByIdController/GetAccountByIdController.ts\n            \n            controller\n            GetAccountByIdController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/account/usecase/CreateAccountUseCase/CreateAccountUseCase.ts\n            \n            injectable\n            CreateAccountUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/account/usecase/GetAccountByIdUseCase/GetAccountByIdUseCase.ts\n            \n            injectable\n            GetAccountByIdUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/account/viewModels/account.viewModel.ts\n            \n            class\n            viewModelAccount\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/payment/controller/CreatePaymentController/CreatePaymentController.ts\n            \n            controller\n            CreatePaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/payment/useCase/CreatePaymentUseCase/CreatePaymentUseCase.ts\n            \n            injectable\n            CreatePaymentUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/payment/viewModels/payment.viewModel.ts\n            \n            class\n            viewModelPayment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/user/controller/CreateUserController/CreateUserController.ts\n            \n            controller\n            CreateUserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/user/controller/GetUserByEmailController/GetUserByEmailController.ts\n            \n            controller\n            GetUserByEmailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/user/usecase/CreateUserUseCase/CreateUserUseCase.ts\n            \n            injectable\n            CreateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/user/usecase/GetUserByEmailUseCase/GetUserByEmailUseCase.ts\n            \n            injectable\n            GetUserByEmailUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/dtos/CreateAccountDto.ts\n            \n            class\n            CreateAccountDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/dtos/CreatePaymentDto.ts\n            \n            class\n            CreatePaymentDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/dtos/CreateUserDto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/dtos/GetAccountByIdDto.ts\n            \n            class\n            GetAccountByIdDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/dtos/LoginAuthDto.ts\n            \n            class\n            LoginAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/dtos/ResponseAccountDto.ts\n            \n            class\n            ResponseAccountDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/domain/dtos/ResponseAuthDto.ts\n            \n            class\n            ResponseAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/dtos/ResponsePaymentDto.ts\n            \n            class\n            ResponsePaymentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/dtos/ResponseUserDto.ts\n            \n            class\n            ResponseUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/entities/Account.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/entities/Payment.ts\n            \n            class\n            Payment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/entities/User.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/interfaces/IAccount.ts\n            \n            interface\n            IAccount\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/interfaces/IPayment.ts\n            \n            interface\n            IPayment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/interfaces/IUser.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/repositories/account.repository.ts\n            \n            class\n            AccountRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/repositories/auth.repository.ts\n            \n            class\n            AuthRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/repositories/payment.repository.ts\n            \n            class\n            PaymentRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/repositories/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/filters/error.filter.ts\n            \n            class\n            ErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/mappers/prisma.account.mapper.ts\n            \n            class\n            PrismaAccountMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/mappers/prisma.payment.mapper.ts\n            \n            class\n            PrismaPaymentMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/mappers/prisma.user.mapper.ts\n            \n            class\n            PrismaUserMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/repository/prisma.account.repository.ts\n            \n            injectable\n            PrismaAccountRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/repository/prisma.auth.repository.ts\n            \n            injectable\n            PrismaAuthRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/repository/prisma.payment.respository.ts\n            \n            injectable\n            PrismaPaymentRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma/repository/prisma.user.repository.ts\n            \n            injectable\n            PrismaUserRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.15.1\n        \n            @typescript-eslint/typescript-estree : ^7.14.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDIN-DIN.v2 - A RESTful API for Managing Bank Accounts and Payments\nRead this page in Portuguese | Read this page in English\n\nAPI Documentation | Code Documentation\nThis RESTful API, developed with NestJS, aims to provide an efficient system for managing bank accounts and payments. It utilizes Prisma ORM for seamless database interactions, Docker for hassle-free development and deployment, and GitHub Actions for continuous integration and delivery. The project follows best practices such as Domain-Driven Design (DDD) and Test-Driven Development (TDD) to ensure a robust and scalable application.\nTable of Contents\n\nInstallation\nRunning with Docker\nDatabase Migrations and Seeding\nAPI Endpoints\nContribution\nLicense\n\nInstallation\nTo run the project locally, follow these steps:\n\nClone the repository from the master branch. git clone https://github.com/Walttinho/din-din-v2.git\nNavigate to the project directory. cd din-din-v2\nInstall dependencies using npm or yarn: npm install or yarn install.\nSet up your environment variables as needed. touch .env && echo -e \"DATABASE_URL=\\nJWT_SECRET=\" >> .env\nRun the application: npm run start:dev or yarn start:dev.\n\nRunning with Docker\nTo run the project using Docker, follow these steps:\n\nInstall Docker on your machine if you haven't already.\nBuild the Docker image: docker build -t din-din-v2 .\nRun the Docker container: docker run -p 3000:3000 din-din-v2\n\nDatabase Migrations and Seeding\nTo apply database migrations and seeding, follow these steps:\n\nRun database migrations: npx prisma migrate dev\nSeed the database with initial data: npx prisma db seed\n\nAPI Endpoints\nFor detailed information on each endpoint, click on the endpoint name. Additionally, you can visit the interactive documentation at Swagger to explore and test the API endpoints directly in your browser.\n\nPOST /user: Create a new user with name, email, and password.\nGET /user: Find a user by email.\nPOST /login: Authenticate a user and return an access token.\nPOST /account: Create a new bank account for a user.\nGET /account: Find a bank account by ID.\nPOST /payment: Create a new payment transaction from a bank account to another.\nGET /account/payment: Find transactions by date.\n\nContribution\nWe appreciate all contributors who have helped make this project what it is today. If you are interested in contributing, please follow the instructions below:\n\nFork the project.\nCreate a branch with the name of your feature or fix (git checkout -b feature/my-new-feature).\nMake your changes and commit them (git commit -am 'Add some feature').\nPush to your branch (git push origin feature/my-new-feature).\nOpen a Pull Request.\n\nPlease ensure your code is in line with the project's style guidelines and that all test checks are passing.\nLicense\nNest is MIT licensed.\nAPI Endpoints\n1. Create a new user\nRoute: POST /user\nDescription: Create a new user\nRequest Body:\nExample :{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\"\n}Response:\nExample :{\n  \"id\": \"df618536-a348-47c3-8438-fb40e7a1c51b\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"createdAt\": \"2024-06-30T22:00:32.828Z\",\n  \"updatedAt\": \"2024-06-30T22:00:32.828Z\"\n}2. Find a user by email.\nRoute: GET /user?john.doe@example.com\nDescription: Find a user by email\nResponse:\nExample :{\n  \"id\": \"df618536-a348-47c3-8438-fb40e7a1c51b\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"createdAt\": \"2024-06-30T22:00:32.828Z\",\n  \"updatedAt\": \"2024-06-30T22:00:32.976Z\"\n}3. Authenticate a user.\nRoute: POST /auth\nDescription: Authenticate a user\nRequest Body:\nExample :{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\"\n}Response:\nExample :{\n  \"user\": {\n    \"id\": \"df618536-a348-47c3-8438-fb40e7a1c51b\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"createdAt\": \"2024-06-30T22:00:32.828Z\",\n    \"updatedAt\": \"2024-06-30T22:00:32.976Z\"\n  },\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZjYxODUzNi1hMzQ4LTQ3YzMtODQzOC1mYjQwZTdhMWM1MWIiLCJlbWFpbCI6ImpvaG4uZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNzE5Nzg4MTU2LCJleHAiOjE3MTk3OTE3NTZ9.lLtLNTb7x3IiK6fIgLWJtE1zccYklbUrApv8U0mxnGw\"\n}4. Create a new bank account.\nRoute: POST /account\nDescription: Create a new bank account\nRequest Body:\nExample :{\n  \"name\": \"Account 01\",\n  \"type\": \"CURRENT\",\n  \"balance\": 1000\n}Response:\nExample :{\n  \"id\": \"11cd6603-01d8-4d90-a800-3cc0a7df0851\",\n  \"name\": \"Account 01\",\n  \"type\": \"CURRENT\",\n  \"balance\": 1000,\n  \"createdAt\": \"2024-06-30T22:59:46.606Z\"\n}5. Find a bank account by ID.\nRoute: GET /account?id=11cd6603-01d8-4d90-a800-3cc0a7df0851\nDescription: Find a bank account by ID\nResponse:\nExample :{\n  \"id\": \"11cd6603-01d8-4d90-a800-3cc0a7df0851\",\n  \"name\": \"Account 01\",\n  \"type\": \"CURRENT\",\n  \"balance\": 1000,\n  \"createdAt\": \"2024-06-30T22:59:46.606Z\",\n  \"payments\": []\n}6. Create a new payment.\nRoute: POST /payment\nDescription: Create a new payment\nRequest Body:\nExample :{\n  \"accountId\": \"12018f9b-4859-4e21-a0f1-45f990fa99c7\",\n  \"amount\": 214,\n  \"description\": \"some description\"\n}Response:\nExample :{\n  \"id\": \"48800cf4-1ce6-4324-8318-1f436dd23c41\",\n  \"accountId\": \"11cd6603-01d8-4d90-a800-3cc0a7df0851\",\n  \"amount\": 214,\n  \"description\": \"some description\",\n  \"createdAt\": \"2024-06-30T23:02:28.428Z\"\n}7. Filter transactions\nRoute: GET /account?id=11cd6603-01d8-4d90-a800-3cc0a7df0851&startDate=2024-06-30T00:00:00.000Z&endDate=2024-06-30T23:59:59.999Z\nDescription: Filter transactions for a bank account\nResponse:\nExample :[\n  {\n    \"id\": \"11cd6603-01d8-4d90-a800-3cc0a7df0851\",\n    \"name\": \"Account 01\",\n    \"type\": \"CURRENT\",\n    \"balance\": 474,\n    \"createdAt\": \"2024-06-30T22:59:46.606Z\",\n    \"payments\": [\n      {\n        \"id\": \"48800cf4-1ce6-4324-8318-1f436dd23c41\",\n        \"accountId\": \"11cd6603-01d8-4d90-a800-3cc0a7df0851\",\n        \"amount\": 214,\n        \"description\": \"some description\",\n        \"createdAt\": \"2024-06-30T23:02:28.428Z\"\n      },\n      {\n        \"id\": \"ac86414f-f3a9-44ab-8e1e-518430f391af\",\n        \"accountId\": \"11cd6603-01d8-4d90-a800-3cc0a7df0851\",\n        \"amount\": 312,\n        \"description\": \"some description\",\n        \"createdAt\": \"2024-06-30T23:09:47.149Z\"\n      }\n    ]\n  }\n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCreateAccountUseCase \n\nCreateAccountUseCase \n\n\n\nGetAccountByIdUseCase \n\nGetAccountByIdUseCase \n\n\n\nAccountModule\n\nAccountModule\n\nCreateAccountUseCase  -->\n\nAccountModule->CreateAccountUseCase \n\n\n\nGetAccountByIdUseCase  -->\n\nAccountModule->GetAccountByIdUseCase \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule -->\n\nAccountModule->DatabaseModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nCreateAccountUseCase\n\nCreateAccountUseCase\n\nAccountModule -->\n\nCreateAccountUseCase->AccountModule\n\n\n\n\n\nGetAccountByIdUseCase\n\nGetAccountByIdUseCase\n\nAccountModule -->\n\nGetAccountByIdUseCase->AccountModule\n\n\n\n\n\nPrismaAccountRepository\n\nPrismaAccountRepository\n\nAccountModule -->\n\nPrismaAccountRepository->AccountModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nPrismaAccountRepository->PaymentModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAccountModule -->\n\nPrismaService->AccountModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\nPaymentModule -->\n\nPrismaService->PaymentModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nPaymentModule -->\n\nDatabaseModule->PaymentModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPrismaUserRepository \n\nPrismaUserRepository \n\nPrismaUserRepository  -->\n\nDatabaseModule->PrismaUserRepository \n\n\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaAuthRepository\n\nPrismaAuthRepository\n\nAuthModule -->\n\nPrismaAuthRepository->AuthModule\n\n\n\n\n\nPrismaUserRepository\n\nPrismaUserRepository\n\nDatabaseModule -->\n\nPrismaUserRepository->DatabaseModule\n\n\n\n\n\nCreatePaymentUseCase\n\nCreatePaymentUseCase\n\nPaymentModule -->\n\nCreatePaymentUseCase->PaymentModule\n\n\n\n\n\nPrismaPaymentRepository\n\nPrismaPaymentRepository\n\nPaymentModule -->\n\nPrismaPaymentRepository->PaymentModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nUserModule -->\n\nCreateUserUseCase->UserModule\n\n\n\n\n\nGetUserByEmailUseCase\n\nGetUserByEmailUseCase\n\nUserModule -->\n\nGetUserByEmailUseCase->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : The dindin.v2 project is a RESTful API developed with NestJS, designed for managing bank accounts and payments. It utilizes Prisma ORM for database interactions, Docker for easing development and deployment, and GitHub Actions for continuous integration and delivery. The project follows modern development practices, including Domain-Driven Design (DDD) and Test-Driven Development (TDD).\n        \n            License : UNLICENSED\n        \n            Author : Walter Netto\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Replace   (src/.../replace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/replace.ts\n    \n    \n        \n            \n                \n                    \n                    Replace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/viewModelAccount.html":{"url":"classes/viewModelAccount.html","title":"class - viewModelAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  viewModelAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/account/viewModels/account.viewModel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/account/viewModels/account.viewModel.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: any; name: any; type: any; balance: any; createdAt: any; payments: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { viewModelPayment } from '../../../application/payment/viewModels/payment.viewModel';\n\nexport class viewModelAccount {\n  static toHttp({ id, name, type, balance, createdAt, payments }: any) {\n    return {\n      id,\n      name,\n      type,\n      balance,\n      createdAt,\n      payments: payments?.map((payment) => viewModelPayment.toHttp(payment)),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/viewModelPayment.html":{"url":"classes/viewModelPayment.html","title":"class - viewModelPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  viewModelPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/payment/viewModels/payment.viewModel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toHttp\n                        \n                    \n                \n            \n            \n                \n                        \n                    toHttp(undefined: Payment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/payment/viewModels/payment.viewModel.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            Payment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { id: Payment; accountId: Payment; amount: Payment; description: Payment; createdAt: Payment; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Payment } from '../../../domain/entities/Payment';\nexport class viewModelPayment {\n  static toHttp({ id, accountId, amount, description, createdAt }: Payment) {\n    return {\n      id,\n      accountId,\n      amount,\n      description,\n      createdAt,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
